{"version":3,"sources":["domain/Home/background.png","domain/Home/HomePage.js","components/AppNavBar.js","domain/Auth/Buttons/FacebookButton.js","domain/Auth/Buttons/GoogleButton.js","api/axiosRequest.js","domain/Auth/SignIn.js","domain/Auth/SignUp.js","domain/Auth/background.png","domain/Auth/UserPage.js","domain/Profile/ProfilePage.js","domain/Dashboard/CreateBoardModal.js","domain/Dashboard/ShareLinkModal.js","domain/Dashboard/BoardList.js","domain/Dashboard/Dashboard.js","domain/Column/Cards/AddMessageCard.js","domain/Column/Cards/MessageCard.js","domain/Column/Cards/EditMessageCard.js","domain/Column/Column.js","domain/Column/Cards/ChangeBoardName.js","domain/Column/ColumnTemplate.js","domain/Column/ColumnsPage.js","App.js","reportWebVitals.js","index.js","api/axiosInstance.js"],"names":["HomePage","className","style","bg","Container","to","AppNavBar","useState","isOpen","setIsOpen","dropdownOpen","setDropdownOpen","location","useLocation","history","useHistory","Navbar","console","log","pathname","indexOf","backgroundColor","fixed","light","expand","NavbarBrand","href","fontFamily","NavbarToggler","onClick","Collapse","navbar","localStorage","getItem","Nav","NavItem","active","Dropdown","toggle","DropdownToggle","icon","faUserCircle","size","DropdownMenu","DropdownItem","removeItem","push","border","padding","FacebookButton","getResponseFacebook","Button","color","block","faFacebook","GoogleButton","getResponseGoogle","faGoogle","axiosRequest","method","url","object","a","axiosInstance","get","response","post","delete","data","put","SignIn","email","setEmail","password","setpassword","state","message","status","notice","setNotice","useEffect","socialToken","Cookies","setItem","remove","login","e","preventDefault","user","token","getResponse","type","left","window","innerWidth","width","top","innerHeight","height","process","open","Col","md","lg","Alert","isNewAccount","Form","onSubmit","FormGroup","Input","id","onChange","target","value","placeholder","required","Label","for","SignUp","username","setUsername","setRePassword","error","setError","comparePassword","rePassword","length","registerNewAccount","newUser","alert","UserPage","option","isTransparent","fluid","Row","xs","ProfilePage","changePass","setChangePass","board","setBoard","newPassword","setNewPassword","currentUserInfo","setCurrentUserInfo","userInfo","sprints","fetchData","changeUSerInfo","changedUser","isPassChange","isEmailChange","result","name","checked","facebookProvider","googleProvider","autoComplete","outline","CreateBoardModal","modal","addNewBoard","boardName","setBoardName","Modal","ModalHeader","ModalBody","title","isActive","createNewBoard","ShareLinkModal","link","BoardList","boardList","setBoardList","isOpenAdd","setisOpenAdd","isOpenShare","setisOpenShare","sprint","setSprint","shareLink","setShareLink","handleOpenAddModal","handleOpenShareModal","boards","map","d","Date","createTime","formatted_date","getDate","getMonth","getFullYear","deleteBoard","deletedboard","newBoardList","filter","_id","Array","from","faPlusCircle","sprintid","faClock","toLocaleString","columns","webLink","REACT_APP_PRODUCT","shareBoardLink","faCopy","faTrashAlt","Dashboard","AddMessageCard","addNewMessage","handleChangeMsg","MessageCard","openEdit","deleteMessage","comment","faEdit","EditMessageCard","handleEditMsg","changedMsg","editMessage","Column","column","messages","addNewMsg","deleteMsg","editMsg","tempMsg","settempMsg","setChangedMsg","msgIdEdited","setmsgIdEdited","isOpenAddCard","setIsOpenAddCard","newMsg","columnType","sprintID","split","order","changedMessage","openEditFormForMessage","msgid","faPlus","ChangeBoardName","changeBoardName","setTitle","handleChangeBoardName","changedBoard","Object","assign","defaultValue","MESSAGE_COLUMNS","ColumnsPage","0","1","2","setMessages","unsortedMsgs","tempMessages","forEach","msg","newBoard","Post","newMessages","messageID","Item","Edit","i","App","basename","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","axios","require","baseURL","create","timeout","headers","interceptors","request","use","config","module","exports"],"mappings":"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","file":"static/js/main.58b35386.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.a71b81e4.png\";","import React from 'react'\r\nimport \"./HomePage.css\";\r\nimport {Container} from \"reactstrap\";\r\nimport bg from './background.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction HomePage() {\r\n   \r\n    return (\r\n        <div>\r\n            <div className=\"background active\" \r\n            style={{\"backgroundImage\": `url(${bg})`}}>\r\n                <div className=\"carousel-caption\" style={{ \"bottom\": \"30%\"}}>\r\n                <Container className=\"heading\">\r\n                    Improve with Sprint Retrospectives \r\n                <p className=\"lead\">This is a description for the first slide.</p>\r\n                <Link className=\"btn-start\" to=\"/auth/signup\"> Get Started for Free </Link>\r\n                </Container>\r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomePage;","import React, {useState} from 'react'\r\nimport {Navbar,NavItem,NavLink,Collapse,NavbarBrand,Nav, NavbarToggler,Dropdown, DropdownItem, DropdownToggle, DropdownMenu } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link, useLocation, useHistory } from 'react-router-dom';\r\n\r\n\r\nexport default function AppNavBar() {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const location = useLocation();\r\n    const history= useHistory();\r\n    const toggle = () => setIsOpen(!isOpen);\r\n    const dropDown = () => setDropdownOpen(!dropdownOpen);\r\n\r\n    const fontStyle={\r\n        fontFamily: 'thirsty_script_extrabold_deRg',\r\n    }\r\n\r\n    const isTranparent = () =>{\r\n        console.log(location.pathname);\r\n        if (location.pathname.indexOf(\"auth\") !== -1 )\r\n        {\r\n           return { backgroundColor: \"transparent\"};\r\n        }\r\n        return {backgroundColor: '#1e88e5'} \r\n    }\r\n\r\n    const signOut = ()=>{\r\n        localStorage.removeItem(\"jwt-token\");\r\n        history.push('/');\r\n    }\r\n\r\n    const signOutBtn = {\r\n        border: \"none\",\r\n        backgroundColor: \"transparent\",\r\n        padding: '0px',\r\n    }\r\n    return (\r\n    <div>\r\n        <Navbar style={isTranparent()} \r\n        className=\"text-light\" fixed=\"top\" light expand=\"md\">\r\n            <NavbarBrand href=\"/\" className=\"text-light\" style={fontStyle}>Sprint Retro</NavbarBrand>\r\n            <NavbarToggler onClick={toggle} />\r\n            <Collapse isOpen={isOpen} navbar>\r\n                \r\n                {localStorage.getItem('jwt-token')?\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem active>\r\n                        <Dropdown isOpen={dropdownOpen} toggle={dropDown} >\r\n                            <DropdownToggle className=\"nav-link\" style={{backgroundColor: \"transparent\"}}>\r\n                                <FontAwesomeIcon icon={faUserCircle} size=\"lg\"></FontAwesomeIcon>\r\n                            </DropdownToggle>\r\n                            <DropdownMenu>\r\n                                <DropdownItem>\r\n                                    <Link to=\"/profile\" className=\"text-decoration-none\"> Profile</Link>\r\n                                </DropdownItem>\r\n                                <DropdownItem>\r\n                                    <button onClick={signOut} className=\"btn-link\" style={signOutBtn}>Sign Out</button>\r\n                                </DropdownItem>\r\n                                <DropdownItem>\r\n                                    <Link to=\"/dashboard\" className=\"text-decoration-none\"> Dashboard</Link>\r\n                                </DropdownItem>\r\n                            </DropdownMenu>        \r\n                            </Dropdown>\r\n                        </NavItem>           \r\n                    </Nav>\r\n                    :<Nav className=\"ml-auto\" navbar>\r\n                    <NavItem active>\r\n                        <Link className=\"text-light nav-link\" to=\"/auth/signin\">Sign In</Link>\r\n                    </NavItem>\r\n                    <NavItem active>\r\n                        <Link className=\"text-light nav-link\" to=\"/auth/signup\">Sign Up</Link>\r\n                    </NavItem>\r\n                </Nav>}\r\n                \r\n            </Collapse>\r\n        </Navbar>\r\n    </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faFacebook } from '@fortawesome/free-brands-svg-icons';\r\nimport {Button} from 'reactstrap';\r\nimport '../user.css';\r\n\r\nfunction FacebookButton({getResponseFacebook}) {\r\n\r\n    return (\r\n        \r\n        \r\n    <Button color=\"primary\" size=\"lg\" block\r\n     className=\"btn-login text-uppercase mr-2\"\r\n     onClick={() => getResponseFacebook(\"facebook\")}>\r\n        <FontAwesomeIcon icon={faFacebook}> </FontAwesomeIcon>\r\n         <span>sign in with Facebook</span>\r\n    </Button>\r\n    )\r\n}\r\n\r\nexport default FacebookButton;\r\n\r\n","import React from 'react'; \r\nimport {Button} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGoogle } from '@fortawesome/free-brands-svg-icons';\r\n\r\nimport '../user.css';\r\n\r\nfunction GoogleButton({getResponseGoogle}) {\r\n\r\n    return (\r\n       \r\n        <Button color=\"danger\" size=\"lg\" block className=\"btn-login mr-2 text-uppercase\"\r\n        onClick={() => getResponseGoogle(\"google\")}>\r\n            <FontAwesomeIcon icon={faGoogle}> </FontAwesomeIcon>\r\n            <span>sign in with Google</span> \r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default GoogleButton;\r\n","import axiosInstance from './axiosInstance';\r\n\r\nconst axiosRequest = async (method,url, object) =>{\r\n        let response;\r\n        if (method === \"GET\")\r\n        {\r\n            response = await axiosInstance.get(url, object);\r\n        }\r\n        else  if (method === \"POST\")\r\n        {\r\n            response = await axiosInstance.post(url, object);\r\n        }\r\n        else if (method===\"DELETE\")\r\n        {\r\n            response = await axiosInstance.delete(url, { data: { object } });\r\n        }\r\n        else if (method===\"PUT\")\r\n        {\r\n            response = await axiosInstance.put(url, object);\r\n        }\r\n        return response;\r\n    }\r\nexport default axiosRequest;","import React, {useState, useEffect} from 'react'\r\nimport {Col,Button, Form, FormGroup, Label, Input, Alert} from \"reactstrap\";\r\nimport {Link, useLocation, useHistory} from \"react-router-dom\";\r\n\r\nimport FacebookButton from './Buttons/FacebookButton';\r\nimport GoogleButton from './Buttons/GoogleButton';\r\nimport axiosRequest from '../../api/axiosRequest';\r\nimport './user.css';\r\nimport Cookies from 'js-cookie';\r\n\r\nexport default function SignIn() {\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const HOST_URL = process.env.REACT_APP_ENV === \"develop\"? process.env.REACT_APP_DEV_SITE: process.env.REACT_APP_PRODUCT_SITE;\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setpassword] = useState(\"\");\r\n    const [notice, setNotice] = useState(location.state ? location.state : {\r\n        message: \"\",\r\n        status: 404\r\n    });\r\n    //let popup = null;\r\n    \r\n    useEffect(() =>{\r\n        const localToken = localStorage.getItem(\"jwt-token\");\r\n        if (localToken)\r\n        {\r\n            history.push(\"/dashboard\");\r\n            return;\r\n        }\r\n\r\n        const socialToken = Cookies.get('jwt-token');\r\n        if (socialToken)\r\n        {\r\n            console.log(socialToken);\r\n            localStorage.setItem(\"jwt-token\", socialToken);\r\n            Cookies.remove('jwt-token');\r\n            history.push(\"/dashboard\");\r\n            return;\r\n        }\r\n    }, [history]);\r\n\r\n    const login = async (e) =>{\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            email: email,\r\n            password: password,\r\n        };\r\n        try {\r\n            const response= await axiosRequest(\"POST\", \"/auth/signin\",user);\r\n            const data = response.data;\r\n\r\n            if (typeof data.token !== \"undefined\")\r\n            {\r\n                 //Store token \r\n                localStorage.setItem(\"jwt-token\", data.token);\r\n                 history.push(\"/dashboard\");\r\n                \r\n            }\r\n            else if (typeof data.message !== \"undefined\")\r\n            {\r\n                setNotice({\r\n                    message: data.message,\r\n                    status: 404 \r\n                });\r\n            }\r\n          \r\n        } catch (error) {\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n\r\n    const getResponse = (type) =>{\r\n        const width = 600, height = 600;\r\n        const left = (window.innerWidth / 2) - (width / 2);\r\n        const top = (window.innerHeight / 2) - (height / 2);\r\n        const url = `${HOST_URL}/auth/${type}`\r\n\r\n        return window.open(url, \"_self\",       \r\n          `toolbar=no, location=no, directories=no, status=no, menubar=no, \r\n          scrollbars=no, resizable=no, copyhistory=no, width=${width}, \r\n          height=${height}, top=${top}, left=${left}`\r\n        );\r\n\r\n\r\n    }\r\n\r\n    const handleEmailChange = (e) =>\r\n    {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handlePasswordChange = (e) =>\r\n    {\r\n        setpassword(e.target.value);\r\n    }\r\n\r\n    const isNewAccount = () =>{\r\n       \r\n        if (typeof notice !== \"undefined\")\r\n        {\r\n            if (notice.status === 200)\r\n            {\r\n                return (<Alert color=\"primary\">\r\n                    {notice.message}\r\n                </Alert>)\r\n            }\r\n            else if (notice.message !== \"\")\r\n            {\r\n                return (<Alert color=\"danger\">\r\n                        {notice.message}\r\n                    </Alert>)\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Col md=\"9\" lg=\"8\" className=\"mx-auto\">\r\n            <h3 className=\"login-heading mb-4\">Welcome back!</h3>\r\n            { isNewAccount() }\r\n            <Form onSubmit={(e) => login(e)}>\r\n                <FormGroup className=\"form-label-group\">\r\n                    <Input type=\"email\" id=\"inputEmail\" onChange={handleEmailChange}\r\n                    placeholder=\"Email\" required></Input>\r\n                    <Label for=\"inputEmail\">Email</Label>\r\n                </FormGroup>\r\n                <FormGroup className=\"form-label-group\">\r\n                    <Input type=\"password\" id=\"inputPassword\" onChange={handlePasswordChange}\r\n                     placeholder=\"Password\" required></Input>\r\n                    <Label for=\"inputPassword\">Password</Label>\r\n                </FormGroup>\r\n                <hr/>\r\n                    <Button type=\"submit\" color=\"primary\" size=\"lg\" block\r\n                    className=\"btn-login text-uppercase font-weight-bold mb-2\"> Sign In</Button>   \r\n                    <div className=\"text-center\">\r\n                        <Link to=\"#\">Forgot password?</Link>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <Link to=\"/auth/signup\">Sign up</Link>\r\n                    </div>\r\n                <hr/>\r\n                <FormGroup>\r\n                    <FacebookButton getResponseFacebook={getResponse} ></FacebookButton>\r\n                    <GoogleButton \r\n                    getResponseGoogle={getResponse}\r\n                    ></GoogleButton>\r\n                </FormGroup>\r\n                \r\n            </Form>\r\n        </Col>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport {Col,Button, Form, FormGroup, Label, Input ,Alert} from \"reactstrap\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\n\r\nimport axiosRequest from '../../api/axiosRequest';\r\nimport './user.css';\r\n\r\nexport default function SignUp() {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setpassword] = useState(\"\");\r\n    const history = useHistory();\r\n    const [rePassword, setRePassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleEmailChange = (e)=>{\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handleUsernameChange = (e)=>{\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    const handlePasswordChange = (e)=>{\r\n        setpassword(e.target.value);\r\n    }\r\n    \r\n    const handleRePasswordChange = (e)=>{\r\n        comparePassword(password,e.target.value);\r\n        setRePassword(e.target.value);\r\n        \r\n    }\r\n    \r\n    const comparePassword = (password, rePassword) =>{\r\n        if (password !== \"\")\r\n        {\r\n            if (password !== rePassword)\r\n            {\r\n                setError(\"Password is not match!!!\");\r\n            }\r\n            else if (password.length < 6){\r\n                setError(\"password must be at least 6 character\");\r\n            }\r\n            else{\r\n                setError(\"\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const registerNewAccount = async (e)=>{\r\n        e.preventDefault();\r\n\r\n        let newUser = {\r\n            email: email,\r\n            username: username,\r\n            password: password,\r\n        }\r\n        try {\r\n            const response = await axiosRequest(\"POST\",\"/auth/signup\", newUser);\r\n            console.log(response.data);\r\n            if (response.status === 200 && !response.data.message)\r\n            {\r\n                history.push({\r\n                    pathname: \"/auth/signin\",\r\n                    state: {\r\n                        message: \"sign up success !!\",\r\n                        status: 200,\r\n                    }\r\n                });\r\n            }\r\n            else{\r\n                setError(response.data.message);\r\n            }\r\n\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <Col md=\"9\" lg=\"8\" className=\"mx-auto\">\r\n        <h3 className=\"login-heading mb-4\">Register</h3>\r\n        {\r\n            error === \"\"? null:\r\n            <Alert color=\"danger\">\r\n                {error}\r\n            </Alert>\r\n        }\r\n        <Form onSubmit={(e) => {registerNewAccount(e)}}>\r\n            <FormGroup className=\"form-label-group\">\r\n                <Input type=\"email\" id=\"inputEmail\"  onChange={handleEmailChange}\r\n                placeholder=\"Email address\" required></Input>\r\n                <Label for=\"inputEmail\">Email address</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"form-label-group\">\r\n                <Input type=\"text\" id=\"inputusername\" onChange={handleUsernameChange} \r\n                placeholder=\"Username\" required ></Input>\r\n                <Label for=\"inputEmail\">Username</Label>\r\n            </FormGroup>\r\n            <hr/>\r\n            <FormGroup className=\"form-label-group\">\r\n                <Input type=\"password\" id=\"inputPassword\" onChange={handlePasswordChange} \r\n                placeholder=\"Password\" required></Input>\r\n                <Label for=\"inputPassword\">Password</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"form-label-group\">\r\n                <Input type=\"password\" id=\"reInputPassword\" onChange={handleRePasswordChange} \r\n                placeholder=\"Re Password\" required></Input>\r\n                <Label for=\"reInputPassword\">Re Password</Label>\r\n            </FormGroup>\r\n            <hr/>\r\n                <Button type=\"submit\" color=\"primary\" size=\"lg\" block\r\n                className=\"btn-login text-uppercase font-weight-bold mb-2\"> Sign Up</Button>   \r\n                <div className=\"text-center\">\r\n                    <Link to=\"/auth/signin\">Sign In</Link>\r\n                </div>\r\n            <hr/>\r\n        </Form>\r\n    </Col>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background.f9ad7e16.png\";","import React from 'react'\r\nimport {Container,Row, Col} from 'reactstrap';\r\n\r\nimport AppNavBar from '../../components/AppNavBar';\r\nimport SignIn from './SignIn';\r\nimport SignUp from './SignUp';\r\nimport './user.css';\r\nimport bg from './background.png';\r\n\r\nexport default function UserPage({option}) {\r\n    return (\r\n        <div className=\"overflow-hidden\">\r\n            <AppNavBar isTransparent={true}></AppNavBar>\r\n            <Container fluid={true}>\r\n                <Row> \r\n                    <Col xs=\"6\" md=\"5\" className=\"bg-image d-none d-md-flex\" style={{\"backgroundImage\": `url(${bg})`}}></Col>\r\n                    <Col md=\"7\" lg=\"6\">\r\n                        <div className=\"login d-flex align-items-center py-5\">\r\n                            <Container>\r\n                                <Row>\r\n                                    {\r\n                                        option === \"signin\"?\r\n                                        <SignIn></SignIn>\r\n                                        : <SignUp></SignUp>\r\n                                    }\r\n                                </Row>\r\n                            </Container>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Container, Row,Col, FormGroup,Form, Label, Input, Button, Alert} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport {useHistory, Link} from \"react-router-dom\";\r\n\r\nimport './profile.css';\r\nimport axiosRequest from '../../api/axiosRequest';\r\n\r\nexport default function ProfilePage() {\r\n\r\n    const history = useHistory();\r\n    const [changePass, setChangePass] = useState(false);\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [board, setBoard] = useState(0);\r\n    const [password, setpassword] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const[notice, setNotice] = useState(\"\");\r\n    const[currentUserInfo, setCurrentUserInfo] = useState({});\r\n    \r\n    const handleEmailChange = (e)=> setEmail(e.target.value);\r\n\r\n    const handleUsernameChange = (e)=> setUsername(e.target.value);\r\n\r\n    const handlePasswordChange = (e)=> setpassword(e.target.value);\r\n    \r\n    const handleNewPasswordChange = (e)=>{\r\n        \r\n        setNewPassword(e.target.value);\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            try {\r\n                const response = await axiosRequest(\"GET\", \"/profile\");\r\n                const userInfo = response.data;\r\n                console.log(userInfo);\r\n                \r\n                //set dat for state\r\n                setUsername(userInfo.username);\r\n                setEmail(userInfo.email);\r\n                setBoard(userInfo.sprints.length);\r\n                setCurrentUserInfo(userInfo);\r\n                \r\n            } catch (error) {\r\n                console.log(error.response);\r\n                if (error.response.status >= 400 && error.response.status <= 500)\r\n                {\r\n                    history.push(\"/auth/signin\");\r\n                    localStorage.removeItem(\"jwt-token\");  \r\n                }\r\n                else{\r\n                    setNotice(\"Can not get data from server\");\r\n                }\r\n            }\r\n        }\r\n        fetchData();\r\n    },[history]);\r\n\r\n\r\n    const changePassword = () => {\r\n        if(typeof currentUserInfo.facebookProvider === \"undefined\" &&typeof currentUserInfo.googleProvider === \"undefined\")\r\n        {\r\n            setChangePass(!changePass);\r\n        }\r\n        else{\r\n            setNotice(\"Can not change password\");\r\n        }\r\n    };\r\n\r\n    //  CHANGE user's infomation using POST method ===========================================\r\n    const changeUSerInfo =async (e) =>{\r\n        e.preventDefault();\r\n\r\n        // B1: create new user from state\r\n        const changedUser = {\r\n            isPassChange: changePass,\r\n            isEmailChange: true,\r\n            user: {\r\n                username: username,\r\n                email: email,\r\n                password: password,\r\n                newPassword: newPassword,\r\n            }\r\n            \r\n        };\r\n        console.log(email);\r\n        if (email !== currentUserInfo.email || username !== currentUserInfo.username || changePass)\r\n        {\r\n            \r\n            if (email === currentUserInfo.email)\r\n            {\r\n                \r\n                changedUser.isEmailChange = false;\r\n            }\r\n        //B2 : post to server to update info of user\r\n            try {\r\n                const response = await axiosRequest('POST', '/profile', changedUser);\r\n                const data = response.data;\r\n               \r\n                if (typeof data.result !== \"undefined\" && typeof data.token !== \"undefined\")\r\n                {\r\n                    setUsername(data.result.username);\r\n                    setEmail(data.result.email);\r\n                    setBoard(data.result.sprints.length);\r\n                    setCurrentUserInfo(data.result);\r\n\r\n                    localStorage.removeItem(\"jwt-token\");\r\n                    localStorage.setItem(\"jwt-token\", data.token);\r\n                    console.log(data.token);\r\n                    setNotice(\"Change user infomation success\");\r\n                }\r\n                if(typeof data.message !== \"undefined\")\r\n                {\r\n                   \r\n                    setNotice(data.message);\r\n                }\r\n            } catch (error) {\r\n                if (error.response.status >= 400 && error.response.status < 500)\r\n                {\r\n                    history.push(\"/auth/signin\");\r\n                    localStorage.removeItem(\"jwt-token\");  \r\n                }\r\n                else{\r\n                    setNotice(error);\r\n                    alert(error);\r\n                }\r\n            }   \r\n        }\r\n        else{\r\n            setNotice(\"User's information did not change\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n       \r\n        <Container >\r\n            <h2 className=\"text-center profile-header\">Thông tin tài khoản</h2>\r\n            <Row className=\"justify-content-md-center profile\">\r\n                <Container > {\r\n                    notice!==\"\"? <Alert color=\"warning\" className=\"text-lg-center\">{notice}</Alert>\r\n                    : null\r\n                }\r\n                </Container>\r\n                <Col lg=\"2\">\r\n                    <FontAwesomeIcon icon={faUserCircle} size=\"6x\"></FontAwesomeIcon>\r\n                </Col>\r\n                <Col lg=\"8\">\r\n                    <Form onSubmit={(e) => changeUSerInfo(e)}>\r\n                        <FormGroup>\r\n                            <Label className=\"control-label\" for=\"username\">Username</Label>\r\n                            <Input type=\"text\" id=\"username\" onChange={handleUsernameChange}\r\n                                value={username} placeholder=\"Username\"/>                               \r\n                        </FormGroup>\r\n                      \r\n                        <FormGroup>\r\n                            <Label className=\"control-label\" for=\"email\">Email</Label>\r\n                            <Input type=\"email\" id=\"email\" onChange={handleEmailChange}\r\n                                value={email} placeholder=\"Email\"></Input>\r\n                        </FormGroup>\r\n                            <Label >Number of board: {board}</Label>\r\n                        <hr/>\r\n                        <FormGroup>     \r\n                            <Input type=\"checkbox\" id=\"is_change_pass\" name=\"is_change_pass\"\r\n                                checked={changePass} onChange={changePassword}></Input>                     \r\n                            <Label className=\"control-label\" for=\"is_change_pass\">Change password?</Label>    \r\n                        </FormGroup>\r\n                        {\r\n                            changePass?\r\n                            <FormGroup>\r\n                                <FormGroup>\r\n                                    <Label className=\"control-label\" for=\"password\">Password </Label>\r\n                                    <Input type=\"password\" id=\"password\" onChange={handlePasswordChange}\r\n                                         value={password} autoComplete=\"off\" placeholder=\"password\"></Input>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label className=\"control-label\" for=\"new-password\">New password </Label>\r\n                                    <Input type=\"password\" id=\"new_password\" onChange={handleNewPasswordChange}\r\n                                         value={newPassword} autoComplete=\"off\" placeholder=\"New password\"></Input>\r\n                                </FormGroup>\r\n                               \r\n                            </FormGroup>\r\n                            :null\r\n                        }\r\n                        <FormGroup>\r\n                            <Button color=\"primary\" size=\"lg\" outline type=\"submit\">Save</Button>\r\n                            <Link to=\"/dashboard\"></Link>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </div>                                    \r\n\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Modal,ModalHeader, ModalBody ,Form, FormGroup, Label, Input, Button} from 'reactstrap';\r\n\r\nexport default function CreateBoardModal({modal,toggle, addNewBoard}) {\r\n\r\n    const [boardName, setBoardName] = useState(\"\");\r\n    \r\n    const handleBoardNameChange = (e) => setBoardName(e.target.value);\r\n\r\n    const createNewBoard = (e) =>{\r\n        e.preventDefault();\r\n            let board = {\r\n                title: boardName,\r\n                isActive: true,\r\n            }\r\n            addNewBoard(board);\r\n    }\r\n    return (\r\n      \r\n       <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle} className=\"text-uppercase justify-content-lg-around\"> \r\n                Create Board\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <Form onSubmit={(e) => {createNewBoard(e); toggle()}}>\r\n                    <FormGroup >\r\n                        <Label  for=\"boardName\">Board Name</Label>\r\n                        <Input type=\"text\" onChange={handleBoardNameChange}\r\n                        placeholder=\"Input board name\"></Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label>Template</Label>\r\n                        <h5>Went Wel - To Improve - Action Items</h5>\r\n                    </FormGroup>                \r\n                    <FormGroup>\r\n                       <Button color=\"primary\" block outline type=\"submit\">Save</Button>\r\n                    </FormGroup>\r\n                </Form>\r\n            </ModalBody>\r\n       </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Modal,ModalHeader, ModalBody} from 'reactstrap';\r\nexport default function ShareLinkModal({modal, toggle, link}) {\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle} className=\"text-uppercase justify-content-lg-around\"> \r\n                Share Link\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <div>{link}</div>\r\n            </ModalBody>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle,faClock,faCopy,faClone,faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport {useHistory} from 'react-router-dom';  \r\nimport {Button} from 'reactstrap';\r\n\r\nimport './dashboard.css';\r\nimport './boardList.css';\r\nimport CreateBoardModal from './CreateBoardModal';\r\nimport axiosRequest from '../../api/axiosRequest';\r\nimport ShareLinkModal from './ShareLinkModal';\r\nexport default function BoardList() {\r\n\r\n    const [boardList, setBoardList] = useState([]);\r\n    const [isOpenAdd, setisOpenAdd] = useState(false);\r\n    const [isOpenShare, setisOpenShare] = useState(false);\r\n    const [sprint, setSprint] = useState(\"\");\r\n    const history = useHistory();\r\n    const [shareLink, setShareLink] = useState(\"\");\r\n\r\n    const handleOpenAddModal = () => setisOpenAdd(!isOpenAdd);\r\n\r\n    const handleOpenShareModal = () => setisOpenShare(!isOpenShare);\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n          try\r\n          {\r\n            const response = await axiosRequest(\"GET\", \"/dashboard\");\r\n            let data = response.data;\r\n            if (response.status=== 200)\r\n            {\r\n              data = data.boards.map(sprint =>{\r\n                  let d = new Date(sprint.createTime);   \r\n                  let formatted_date =  d.getDate() + '/' + (d.getMonth() + 1) +'/'+ d.getFullYear();\r\n                  sprint.createTime = formatted_date; \r\n                  return sprint;\r\n              });\r\n              console.log(data);\r\n              setBoardList(data);\r\n            }\r\n          }\r\n          catch(error) {\r\n            if (error.response.status >= 400 && error.response.status < 500)\r\n            {\r\n                history.push(\"/auth/signin\");\r\n                localStorage.removeItem(\"jwt-token\");\r\n            }\r\n            else{\r\n                alert(error);\r\n            }\r\n            \r\n        }\r\n        }\r\n        fetchData();\r\n        },[history]);\r\n\r\n\r\n    // open Dialog ==============================================\r\n    const openColumnPage = (sprintid) => \r\n    {\r\n        setSprint(sprintid);\r\n        console.log(sprint);\r\n        history.push(`/dashboard/${sprintid}`);\r\n    }\r\n\r\n    // DELETE board ====================================================\r\n    const deleteBoard = async (deletedboard) =>{\r\n        try {\r\n            const result = await axiosRequest(\"DELETE\", \"/dashboard\", deletedboard);\r\n            console.log({deletedboard});\r\n            if(result.status === 200)\r\n            {\r\n                console.log(result);\r\n                const newBoardList = boardList.filter(board => board._id !== deletedboard._id);\r\n                setBoardList(newBoardList);\r\n            }\r\n        } catch (error) {\r\n            if (error.response.status >= 400 && error.response.status < 500)\r\n            {\r\n                history.push(\"/auth/signin\");\r\n                localStorage.removeItem(\"jwt-token\");\r\n            }\r\n            else{\r\n                alert(error);\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    // handle add new board ============================================\r\n    const addNewBoard = async (board) =>{\r\n        try {\r\n            const response = await axiosRequest(\"POST\",'/dashboard', board);\r\n            \r\n            if (response.status === 200)\r\n            {\r\n                let d = new Date(response.data.createTime);  \r\n                board = response.data; \r\n                let formatted_date =  d.getDate() + '/' + (d.getMonth() + 1) +'/'+ d.getFullYear();\r\n                    \r\n                board.createTime = formatted_date; \r\n                boardList.push(board);\r\n                const newBoardList = Array.from(boardList);\r\n                setBoardList(newBoardList);\r\n            }\r\n\r\n        } catch (error) {\r\n            if (error.response.status >= 400 && error.response.status < 500)\r\n            {\r\n                history.push(\"/auth/signin\");\r\n                localStorage.removeItem(\"jwt-token\");\r\n            }\r\n            else\r\n            {\r\n                alert(error);\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    //SHARE board link ===========================================================\r\n    const shareBoardLink = (board) =>{\r\n        const webLink = process.env.REACT_APP_ENV === 'develop'? process.env.REACT_APP_CLIENT :process.env.REACT_APP_PRODUCT;\r\n        setShareLink(`${webLink}/#/dashboard/${board._id}`);\r\n        handleOpenShareModal();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {(<div>\r\n            <CreateBoardModal modal={isOpenAdd} toggle={handleOpenAddModal}\r\n             addNewBoard={addNewBoard}></CreateBoardModal>\r\n             <ShareLinkModal modal={isOpenShare} toggle={handleOpenShareModal}\r\n             link={shareLink}></ShareLinkModal>\r\n            <ul>\r\n            <li className=\"dashboard-item add-item\" onClick={handleOpenAddModal}>\r\n                <span className=\"add\">\r\n                <FontAwesomeIcon icon={faPlusCircle} size=\"4x\"/>\r\n                <small>Add board</small>\r\n                </span>\r\n            </li>\r\n            {\r\n                boardList.map(board =>{\r\n                    return (\r\n                        <li className='dashboard-item' key={board._id}>\r\n                            <div className=\"dashboard-item-body\">\r\n                                <div onClick={() => openColumnPage(board._id)}>\r\n                                <p>{board.title}</p>\r\n                                <div className=\"date-and-number\">\r\n                                    <span className=\"board-date\">\r\n                                        <FontAwesomeIcon icon={faClock}></FontAwesomeIcon>\r\n                                        {board.createTime.toLocaleString()}\r\n                                    </span>\r\n                                    <span className=\"board-date\">{board.columns.length} cards</span>\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"board-actions\">\r\n                                    <Button className=\"text-decoration-none\" color=\"link\"\r\n                                     onClick={() => shareBoardLink(board)}>\r\n                                        <FontAwesomeIcon icon={faCopy}></FontAwesomeIcon>\r\n                                         URL \r\n                                    </Button>                                    \r\n                                    <Button color=\"link\" className=\"text-decoration-none\" onClick={() =>{deleteBoard(board)}}>\r\n                                        <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon>\r\n                                        Delete\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    );\r\n                })\r\n            }\r\n        </ul>\r\n           \r\n        </div>)\r\n        }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport BoardList from './BoardList';\r\n\r\nexport default function Dashboard() {\r\n    return (      \r\n          <div className=\"dashboard\">\r\n          \r\n            <h1>My Boards</h1>\r\n            <hr></hr>\r\n            <BoardList></BoardList>\r\n          </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Form, FormGroup, Row, Col ,Input, Button}from 'reactstrap';\r\n\r\nexport default function AddMessageCard({addNewMessage, handleChangeMsg}) {\r\n    return (\r\n        <Form onSubmit={addNewMessage}>\r\n                <Row className=\"flex-end-btn\">\r\n                    <Col xs=\"8\">\r\n                        <FormGroup> \r\n                            <Input type=\"text\" onChange={handleChangeMsg}></Input>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"3\">\r\n                        <FormGroup>\r\n                            <div></div>\r\n                            <Button color=\"primary\" block type=\"submit\">Save</Button>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport{Button} from 'reactstrap';\r\nimport './card.css'\r\nexport default function MessageCard({message, openEdit,deleteMessage}) {\r\n    return (\r\n        <>\r\n        <div className=\"message-body\">\r\n            <div className=\"text\">\r\n                {message.comment}\r\n            </div>\r\n            </div>\r\n            <Button onClick={() => openEdit(message)} \r\n            color=\"link\" style={{color: \"white\"}}>\r\n                <FontAwesomeIcon icon={faEdit}></FontAwesomeIcon>\r\n            </Button>\r\n            <Button onClick={() => deleteMessage(message._id)} \r\n            color=\"link\" style={{color: \"white\"}}>\r\n                <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon>\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Form, Row, Col, FormGroup, Input, Button} from 'reactstrap';\r\nexport default function EditMessageCard({message,\r\n                                         handleEditMsg, \r\n                                         changedMsg,\r\n                                        editMessage\r\n                                    }) {\r\n    return (\r\n        <Form onSubmit={(e) => editMessage(e,message)}>\r\n            <Row className=\"flex-end-btn\">\r\n                <Col xs=\"8\">\r\n                    <FormGroup> \r\n                        <Input type=\"text\" onChange={handleEditMsg}\r\n                        value={changedMsg}></Input>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col xs=\"3\">\r\n                    <FormGroup>\r\n                        <div></div>\r\n                        <Button color=\"primary\" block type=\"submit\">Save</Button>\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useLocation} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus} from '@fortawesome/free-solid-svg-icons';\r\nimport {Button} from 'reactstrap';\r\n\r\nimport './column.css';\r\nimport AddMessageCard from './Cards/AddMessageCard';\r\nimport MessageCard from './Cards/MessageCard';\r\nimport EditMessageCard from './Cards/EditMessageCard';\r\nexport default function Column({column,\r\n                                messages,\r\n                                addNewMsg,\r\n                                deleteMsg,\r\n                                editMsg,\r\n                            }) {\r\n\r\n    const location = useLocation();\r\n    const [tempMsg, settempMsg] = useState(\"\");\r\n    const [changedMsg, setChangedMsg] = useState(\"\");\r\n   \r\n    const [msgIdEdited, setmsgIdEdited] = useState(\"\");                     \r\n    const [isOpenAddCard, setIsOpenAddCard] = useState(false);\r\n\r\n     //Add new message =================================================================\r\n\r\n     const handleChangeMsg  = (e) => settempMsg (e.target.value);\r\n     const isOpenAddMsgCard = () => setIsOpenAddCard(!isOpenAddCard);\r\n     \r\n     const addNewMessage = async (e) =>{\r\n         e.preventDefault();\r\n \r\n         const newMsg = {\r\n             columnType: column.type,\r\n             comment: tempMsg,\r\n             isActive: true,\r\n             sprintID: location.pathname.split('/')[2],\r\n             order: 1,\r\n         }\r\n         \r\n         addNewMsg(newMsg);\r\n         setIsOpenAddCard(!isOpenAddCard);\r\n     }\r\n \r\n     //Edit messgae ====================================================================\r\n     const handleEditMsg = (e) => setChangedMsg(e.target.value);\r\n \r\n     const editMessage = (e, message)=>{\r\n         e.preventDefault();\r\n         const changedMessage = {\r\n             _id:  message._id,\r\n             columnType: column.type,\r\n             comment: changedMsg,\r\n             isActive: message.isActive,\r\n             sprintID: location.pathname.split('/')[2],\r\n             order: 1,\r\n         }\r\n \r\n         editMsg(changedMessage);\r\n\r\n        setmsgIdEdited(-1);\r\n     }\r\n \r\n    const openEditFormForMessage = (message) => {\r\n        setChangedMsg(message.comment);\r\n        setmsgIdEdited(message._id);\r\n        console.log(\"ssssss\");\r\n     }\r\n    \r\n     const deleteMessage = (msgid) =>{\r\n         deleteMsg(msgid, column.type);\r\n     }\r\n\r\n\r\n    return (\r\n        <div className=\"message-list overflow-hidden\">\r\n        <div className=\"color-picker\">\r\n        <span className=\"color-picker-selected\" style={column.style}></span>\r\n        <span className=\"column-name\">{column.name}</span>\r\n        </div>\r\n        <Button outline color=\"primary\" block className=\"btn-add\" onClick={isOpenAddMsgCard}>\r\n            <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>\r\n        </Button>\r\n        <ul>\r\n            {isOpenAddCard?\r\n            <li className=\"message\" style={column.style}>\r\n                <AddMessageCard addNewMessage={addNewMessage} handleChangeMsg={handleChangeMsg}></AddMessageCard>\r\n            </li>\r\n            :null\r\n            }\r\n            {\r\n            messages.map(message =>{\r\n                if (msgIdEdited === message._id)\r\n                {                  \r\n                    return <li className=\"message\" style={column.style} key={message._id}>\r\n                        <EditMessageCard \r\n                        message={message}\r\n                        handleEditMsg={handleEditMsg} \r\n                        changedMsg={changedMsg}\r\n                        editMessage={editMessage}\r\n                        ></EditMessageCard>\r\n                    </li>\r\n                }\r\n                else{\r\n                    return (\r\n                        <li className=\"message\" style={column.style} key={message._id}>\r\n                            <MessageCard message={message} \r\n                            openEdit={openEditFormForMessage} \r\n                            deleteMessage={deleteMessage}>  \r\n                            \r\n                            </MessageCard>\r\n                        </li>);\r\n                }\r\n                \r\n            })  \r\n                                        \r\n            }                                \r\n        </ul>\r\n    </div>\r\n    )\r\n}\r\n","import React, { useState} from 'react';\r\nimport {Button, Form, Row, Col, Label, Input} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './card.css';\r\n\r\nexport default function ChangeBoardName({board, changeBoardName}) {\r\n\r\n\r\n    const handleBoardNameChange = (e) => {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const handleChangeBoardName = async (e) =>{\r\n        e.preventDefault();\r\n        let changedBoard = Object.assign({}, board);\r\n        changedBoard.title = title;\r\n        //console.log(changedBoard);\r\n       changeBoardName(changedBoard); \r\n       \r\n        toggle();\r\n    }\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    return (\r\n        <div>\r\n            <Link type=\"button\"  className=\"go-back-link\" to=\"/dashboard\">/Dashboard</Link>\r\n           \r\n           <Row className=\"change-board-name-text\">\r\n           {isOpen?\r\n                <Form onSubmit={(e) => handleChangeBoardName(e)} className=\"form\">\r\n                    <Row>\r\n                    <Col md={6}>\r\n                        \r\n                        <Input type=\"text\" className=\"form-input\" onChange={handleBoardNameChange}\r\n                        defaultValue={board.title}></Input>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Button color=\"primary\" outline type=\"submit\">Save</Button>\r\n                        <Button color='link' outline onClick={toggle}> Cancel</Button>\r\n                    </Col>\r\n                    </Row>        \r\n                </Form>\r\n           :\r\n           <>\r\n                <Label style={{padding: \"10px 30px 0px 30px\"}}>{board.title}</Label>\r\n                <Button color=\"link\" onClick={toggle}>\r\n                    <FontAwesomeIcon icon={faEdit}></FontAwesomeIcon>\r\n                </Button>\r\n            </>\r\n            }\r\n            </Row>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","const MESSAGE_COLUMNS  = [\r\n        {   \r\n            name: \"Went Well\",\r\n            style: {\r\n                \"backgroundColor\": \"green\",\r\n                \"color\": \"white\",\r\n            },\r\n            type: 0\r\n        },\r\n        {\r\n            name: \"To Improve\",\r\n            style: {\r\n                \"backgroundColor\": \"orange\",\r\n                \"color\": \"white\",\r\n            },\r\n            type: 1\r\n        },\r\n        {\r\n            name: \"Action Items\",\r\n            style: {\r\n                \"backgroundColor\": \"blue\",\r\n                \"color\": \"white\",\r\n            },\r\n            type: 2\r\n        },\r\n];\r\n\r\n\r\nexport default MESSAGE_COLUMNS;","import React, {useEffect, useState} from 'react';\r\nimport { useLocation, useHistory} from \"react-router-dom\";\r\n\r\n\r\nimport './column.css';\r\nimport axiosRequest from '../../api/axiosRequest';\r\nimport Column from './Column';\r\nimport ChangeBoardName from './Cards/ChangeBoardName';\r\nimport MESSAGE_COLUMNS from './ColumnTemplate';\r\n\r\n\r\nexport default function ColumnsPage() {\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const [board, setBoard] = useState({});\r\n    const [messages,setMessages] = useState({\r\n        0: [],\r\n        1: [],\r\n        2: []\r\n    }); \r\n\r\n    // GET data from server ================================================ \r\n    useEffect(()=>{\r\n        const fetchData = async() =>{\r\n            try {\r\n            const response = await axiosRequest('GET',location.pathname);\r\n            let data = response.data;\r\n           \r\n            if (response.status === 200)\r\n            {\r\n                let unsortedMsgs = Array.from(data.columns);\r\n                let tempMessages = {\r\n                    0: [],\r\n                    1: [],\r\n                    2: []\r\n                };\r\n                setBoard(data);\r\n               \r\n               \r\n                unsortedMsgs.forEach(msg => {\r\n                    const type = msg.columnType;\r\n                    tempMessages[type].push(msg);\r\n                });\r\n                setMessages(tempMessages);\r\n                //console.log(messages[0].length + messages[1].length + messages[2].length !== unsortedMsgs.length);\r\n                \r\n\r\n            }\r\n\r\n            } catch (error) {\r\n               \r\n                if (error.response.status >= 400 && error.response.status < 500)\r\n                {\r\n                    history.push(\"/auth/signin\");\r\n                    localStorage.removeItem(\"jwt-token\");\r\n                }\r\n                else{\r\n                    alert(\"can not get data from server\");\r\n                }\r\n                \r\n            }\r\n        }\r\n        fetchData();\r\n    },[location.pathname, history]);\r\n\r\n    // CHANGE board name ==================================================================\r\n    const changeBoardName= async (changedBoard) =>{\r\n        try {\r\n            const response = await axiosRequest(\"PUT\",location.pathname, changedBoard);\r\n            if (response.status === 200)\r\n            {\r\n                console.log(response.data);\r\n                const newBoard = Object.assign({}, changedBoard);\r\n                setBoard(newBoard);    \r\n            }\r\n            \r\n        } catch (error) {\r\n            if (error.response.status >= 400 && error.response.status < 500)\r\n            {\r\n                history.push(\"/auth/signin\");\r\n                localStorage.removeItem(\"jwt-token\");\r\n            }\r\n            else{\r\n                alert(\"can not change board name\");\r\n            }\r\n        }\r\n    }\r\n\r\n    //ADD new message ======================================================================\r\n    const addNewMessage = async (newMsg) =>{\r\n        try {\r\n            //B1: post new message to server\r\n            const response = await axiosRequest('POST',location.pathname, newMsg);\r\n            const data = response.data;\r\n            console.log({Post: data});\r\n            //B2: check response status\r\n            if (response.status === 200)\r\n            {\r\n                //B3: Add new message to messages object\r\n                const type = data.columnType;\r\n                const newMessages = Object.assign({}, messages);\r\n                newMessages[type].push(data);               \r\n                setMessages(newMessages);\r\n                \r\n            }\r\n        } catch (error) {\r\n            if (error.response.status >= 400 && error.response.status < 500)\r\n            {\r\n                history.push(\"/auth/signin\");\r\n                localStorage.removeItem(\"jwt-token\");\r\n            }\r\n            else{\r\n                //error handle\r\n            alert(\"can not add new message\");\r\n            }\r\n        }\r\n    }\r\n\r\n    // DELETE message ===============================================================\r\n    const deleteMessage = async (messageID, type) =>{\r\n        try {\r\n            //B1: delete message with DELETE method\r\n            console.log(location.pathname);\r\n            const response = await axiosRequest(\"DELETE\", `${location.pathname}/${messageID}`, messageID);\r\n            \r\n            if (response.status === 200)\r\n            {       \r\n                //B3: Change message and re render  \r\n                \r\n                const newMessages = Object.assign({}, messages);\r\n                //delete messages[type];\r\n                newMessages[type] = messages[type].filter(msg => msg._id !== messageID);\r\n                console.log(messages);\r\n                setMessages(newMessages);\r\n            }\r\n        } catch (error) {\r\n            if (error.response.status >= 400 && error.response.status < 500)\r\n            {\r\n                history.push(\"/auth/signin\");\r\n                localStorage.Item(\"jwt-token\");\r\n            }\r\n             else\r\n             {\r\n                 //error handle\r\n             alert(error);\r\n             }\r\n        }\r\n    }\r\n\r\n    //EDIT message ================================================================\r\n    const editMessage = async (changedMessage) =>{\r\n        try {\r\n            //B1: change message with PUT method\r\n            const response = await axiosRequest('PUT',`${location.pathname}/${changedMessage._id}`, changedMessage);\r\n            const data = response.data;\r\n            console.log({Edit: data});\r\n            //B2: check response status\r\n            if (response.status === 200)\r\n            {               \r\n                //B3: update messages list\r\n                const type = changedMessage.columnType;\r\n                const newMessages = Object.assign({}, messages);\r\n                newMessages[type] = messages[type].map(message =>{\r\n                    if (message._id === data._id)\r\n                    {\r\n                        return data;\r\n                    }\r\n                    return message;\r\n                })\r\n                console.log(newMessages);\r\n                setMessages(newMessages);\r\n            }\r\n            \r\n            \r\n        } catch (error) {\r\n            if (error.response.status >= 400 && error.response.status < 500)\r\n            {\r\n                history.push(\"/auth/signin\");\r\n                localStorage.removeItem(\"jwt-token\");\r\n            }\r\n            else{\r\n                alert(\"can not edit message\");\r\n            }\r\n            //error handle\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n      \r\n       <div>\r\n            <div className=\"column\">\r\n                <ChangeBoardName board={board} changeBoardName={changeBoardName}></ChangeBoardName>\r\n                <hr/>\r\n                <div className=\"column-container\">\r\n                    {\r\n                    MESSAGE_COLUMNS.map((column,i) =>{\r\n                        return <Column column={column} \r\n                        messages={messages[i]}\r\n                        addNewMsg={addNewMessage}\r\n                        deleteMsg={deleteMessage}\r\n                        editMsg={editMessage}\r\n                        key={i}\r\n                        ></Column>\r\n                    })\r\n                    }\r\n                </div>                              \r\n            </div>\r\n       </div>\r\n    )\r\n    \r\n}\r\n","import React from 'react';\nimport {HashRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\n\nimport './domain/Dashboard/dashboard.css';\n\nimport HomePage from './domain/Home/HomePage';\nimport UserPage from './domain/Auth/UserPage';\nimport ProfilePage from './domain/Profile/ProfilePage';\nimport Dashboard from './domain/Dashboard/Dashboard';\nimport ColumnsPage from './domain/Column/ColumnsPage';\nimport AppNavBar from './components/AppNavBar';\n\nfunction App() {\n  return (\n    \n    <Router basename=\"/\">\n    <AppNavBar></AppNavBar>\n      <Switch>\n        <Route path=\"/sprint-retro-app\">\n          <Redirect to=\"/\"></Redirect>\n        </Route>\n        <Route path=\"/auth/signin\">\n          <UserPage option=\"signin\"></UserPage>\n        </Route>\n        <Route path=\"/auth/signup\">\n          <UserPage option=\"signup\"></UserPage>\n        </Route>\n        <Route path=\"/profile\">\n          <ProfilePage></ProfilePage>\n        </Route>\n        \n        <Route path=\"/dashboard/:sprintid\">\n          <ColumnsPage></ColumnsPage>\n        </Route>\n        <Route path=\"/dashboard\">\n          <Dashboard/>\n        </Route>\n        <Route exact path=\"/\">\n          <HomePage></HomePage>\n        </Route>\n      </Switch>   \n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const axios = require('axios');\r\nconst baseURL = process.env.REACT_APP_ENV === \"develop\"? process.env.REACT_APP_DEV_SITE: process.env.REACT_APP_PRODUCT_SITE;\r\nconsole.log(baseURL);\r\nconst axiosInstance = axios.create({\r\n    baseURL: baseURL,\r\n    timeout: 10000,\r\n    headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Access-Control-Allow-Methods\": \"GET,HEAD,OPTIONS,POST,PUT,PATCH,DELETE\",\r\n        \"Access-Control-Allow-Headers\":\"Origin, X-Requested-With, Content-Type, Accept,Authorization\",\r\n\r\n    }\r\n  });\r\n\r\n  axiosInstance.interceptors.request.use((config) => {\r\n    //if token is exists, set header\r\n    const token = localStorage.getItem(\"jwt-token\");\r\n    if (token)\r\n    {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  });\r\n\r\nmodule.exports =  axiosInstance;\r\n\r\n\r\n\r\n"],"sourceRoot":""}