{"version":3,"sources":["components/AppNavBar.js","components/BoardList.js","App.js","reportWebVitals.js","index.js"],"names":["AppNavBar","useState","isOpen","setIsOpen","Navbar","style","backgroundColor","className","light","expand","NavbarBrand","href","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","active","NavLink","BoardList","boardList","icon","faPlusCircle","size","map","board","title","faClock","createTime","faCopy","faClone","App","setBoardList","useEffect","a","fetch","response","json","console","log","boards","fetchData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"4UAGe,SAASA,IAAa,IAAD,EAEJC,oBAAS,GAFL,mBAEzBC,EAFyB,KAEjBC,EAFiB,KAUhC,OACA,8BACI,eAACC,EAAA,EAAD,CAAQC,MANO,CACfC,gBAAiB,WAKUC,UAAU,aAAaC,OAAK,EAACC,OAAO,KAA/D,UACI,cAACC,EAAA,EAAD,CAAaC,KAAK,IAAIJ,UAAU,aAAhC,yBACA,cAACK,EAAA,EAAD,CAAeC,QAVR,kBAAMV,GAAWD,MAWxB,cAACY,EAAA,EAAD,CAAUZ,OAAQA,EAAQa,QAAM,EAAhC,SACI,eAACC,EAAA,EAAD,CAAKT,UAAU,UAAUQ,QAAM,EAA/B,UACI,cAACE,EAAA,EAAD,CAASC,QAAM,EAAf,SACI,cAACC,EAAA,EAAD,CAASZ,UAAU,aAAaI,KAAK,IAArC,uBAEJ,cAACM,EAAA,EAAD,UACI,cAACE,EAAA,EAAD,CAASZ,UAAU,aAAaI,KAAK,IAArC,iC,wBCnBT,SAASS,EAAT,GAAiC,IAAbC,EAAY,EAAZA,UAI/B,OACI,+BACI,oBAAId,UAAU,0BAAd,SACI,uBAAMA,UAAU,MAAhB,UACA,cAAC,IAAD,CAAiBe,KAAMC,IAAcC,KAAK,OAC1C,mDAIAH,EAAUI,KAAI,SAAAC,GACV,OACI,oBAAInB,UAAU,iBAAd,SACI,sBAAKA,UAAU,sBAAf,UACI,4BAAImB,EAAMC,QACV,uBAAMpB,UAAU,aAAhB,UACI,cAAC,IAAD,CAAiBe,KAAMM,MACtBF,EAAMG,cAEX,uBACA,sBAAKtB,UAAU,gBAAf,UACI,oBAAGI,KAAK,IAAR,UACI,cAAC,IAAD,CAAiBW,KAAMQ,MAD3B,SAIA,oBAAGnB,KAAK,IAAR,UACI,cAAC,IAAD,CAAiBW,KAAMS,MAD3B,yBCFrBC,MAzBf,WAAgB,IAAD,EACqB/B,mBAAS,IAD9B,mBACNoB,EADM,KACKY,EADL,KAab,OAVAC,qBAAU,WAAI,4CACZ,8BAAAC,EAAA,sEACyBC,MAAM,yBAD/B,cACQC,EADR,gBAE0BA,EAASC,OAFnC,OAEQjB,EAFR,OAGEkB,QAAQC,IAAInB,GACZY,EAAaZ,EAAUoB,QAJzB,4CADY,uBAAC,WAAD,wBAOZC,KACA,IAGA,gCACA,cAAC1C,EAAD,IACA,sBAAKO,UAAU,YAAf,UACE,2CACA,uBACA,cAACa,EAAD,CAAWC,UAAWA,WCbbsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5e1d3984.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport {Navbar,NavItem,NavLink,Collapse,NavbarBrand,Nav, NavbarToggler } from 'reactstrap';\r\n\r\nexport default function AppNavBar() {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    const boardStyle = {\r\n        backgroundColor: '#1e88e5',\r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <Navbar style={boardStyle} className=\"text-light\" light expand=\"md\">\r\n            <NavbarBrand href=\"/\" className=\"text-light\">SprintRetro</NavbarBrand>\r\n            <NavbarToggler onClick={toggle} />\r\n            <Collapse isOpen={isOpen} navbar>\r\n                <Nav className=\"ml-auto\" navbar>\r\n                    <NavItem active>\r\n                        <NavLink className=\"text-light\" href=\"#\">Sign In</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className=\"text-light\" href=\"#\">Sign Up</NavLink>\r\n                    </NavItem>\r\n                </Nav>\r\n            </Collapse>\r\n        </Navbar>\r\n    </div>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport './dashboard.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle,faClock,faCopy,faClone } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function BoardList({boardList}) {\r\n\r\n    //const \r\n\r\n    return (\r\n        <ul>\r\n            <li className=\"dashboard-item add-item\">\r\n                <span className=\"add\">\r\n                <FontAwesomeIcon icon={faPlusCircle} size=\"4x\"/>\r\n                <small>Add board</small>\r\n                </span>\r\n            </li>\r\n            {\r\n                boardList.map(board =>{\r\n                    return (\r\n                        <li className='dashboard-item'>\r\n                            <div className=\"dashboard-item-body\">\r\n                                <p>{board.title}</p>\r\n                                <span className=\"board-date\">\r\n                                    <FontAwesomeIcon icon={faClock}></FontAwesomeIcon>\r\n                                    {board.createTime}\r\n                                </span>\r\n                                <ul></ul>\r\n                                <div className=\"board-actions\">\r\n                                    <a href=\"#\">\r\n                                        <FontAwesomeIcon icon={faCopy}></FontAwesomeIcon>\r\n                                         URL \r\n                                    </a>\r\n                                    <a href=\"#\">\r\n                                        <FontAwesomeIcon icon={faClone}></FontAwesomeIcon>\r\n                                        Clone\r\n                                    </a>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    );\r\n                })\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport AppNavBar from './components/AppNavBar';\nimport BoardList from './components/BoardList';\n\n\nfunction App() {\n  const [boardList, setBoardList] = useState([]);\n\n  useEffect(()=>{\n    async function fetchData(){\n      const response = await fetch(\"http://localhost:8000\");\n      const boardList=  await response.json();\n      console.log(boardList);\n      setBoardList(boardList.boards);\n    }\n    fetchData();\n  },[]);\n\n  return (\n    <div>\n    <AppNavBar></AppNavBar>\n    <div className=\"dashboard\">\n      <h1>My Boards</h1>\n      <hr></hr>\n      <BoardList boardList={boardList}></BoardList>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}