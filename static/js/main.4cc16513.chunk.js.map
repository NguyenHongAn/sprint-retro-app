{"version":3,"sources":["domain/Home/background.png","domain/Home/HomePage.js","components/AppNavBar.js","api/axiosRequest.js","domain/Auth/SignIn.js","domain/Auth/SignUp.js","domain/Auth/background.png","domain/Auth/UserPage.js","domain/Profile/ProfilePage.js","domain/Dashboard/CreateBoardModal.js","domain/Dashboard/ShareLinkModal.js","domain/Dashboard/BoardList.js","domain/Dashboard/Dashboard.js","domain/Column/Cards/AddMessageCard.js","domain/Column/Cards/MessageCard.js","domain/Column/Cards/EditMessageCard.js","domain/Column/Column.js","domain/Column/Cards/ChangeBoardName.js","domain/Column/ColumnTemplate.js","domain/Column/ColumnsPage.js","App.js","reportWebVitals.js","index.js","api/axiosInstance.js"],"names":["HomePage","className","style","bg","Container","to","AppNavBar","useState","isOpen","setIsOpen","dropdownOpen","setDropdownOpen","location","useLocation","Navbar","console","log","pathname","indexOf","backgroundColor","fixed","light","expand","NavbarBrand","href","fontFamily","NavbarToggler","onClick","Collapse","navbar","localStorage","getItem","Nav","NavItem","active","Dropdown","toggle","DropdownToggle","icon","faUserCircle","size","DropdownMenu","DropdownItem","NavLink","axiosRequest","method","url","object","a","axiosInstance","get","response","post","delete","data","put","SignIn","history","useHistory","email","setEmail","password","setpassword","state","message","status","notice","setNotice","login","e","preventDefault","user","token","setItem","push","Col","md","lg","Alert","color","Form","onSubmit","FormGroup","Input","type","id","onChange","target","value","placeholder","required","Label","for","Button","block","faGoogle","faFacebook","SignUp","username","setUsername","setRePassword","error","setError","comparePassword","rePassword","registerNewAccount","newUser","alert","UserPage","option","isTransparent","fluid","Row","xs","ProfilePage","changePass","setChangePass","board","setBoard","newPassword","setNewPassword","currentUserInfo","setCurrentUserInfo","useEffect","userInfo","sprints","length","removeItem","fetchData","changeUSerInfo","changedUser","isPassChange","isEmailChange","result","name","checked","autoComplete","outline","CreateBoardModal","modal","addNewBoard","boardName","setBoardName","Modal","ModalHeader","ModalBody","title","isActive","createNewBoard","ShareLinkModal","link","readOnly","defaultValue","BoardList","boardList","setBoardList","isOpenAdd","setisOpenAdd","isOpenShare","setisOpenShare","sprint","setSprint","shareLink","setShareLink","handleOpenAddModal","handleOpenShareModal","boards","map","d","Date","createTime","formatted_date","getDate","getMonth","getFullYear","deleteBoard","deletedboard","newBoardList","filter","_id","Array","from","faPlusCircle","sprintid","faClock","toLocaleString","columns","process","shareBoardLink","faCopy","faClone","faTrashAlt","Dashboard","AddMessageCard","addNewMessage","handleChangeMsg","MessageCard","openEdit","deleteMessage","comment","faEdit","EditMessageCard","handleEditMsg","changedMsg","editMessage","Column","column","messages","addNewMsg","deleteMsg","editMsg","tempMsg","settempMsg","setChangedMsg","msgIdEdited","setmsgIdEdited","isOpenAddCard","setIsOpenAddCard","newMsg","columnType","sprintID","split","order","changedMessage","openEditFormForMessage","msgid","faPlus","ChangeBoardName","changeBoardName","setTitle","handleChangeBoardName","changedBoard","Object","assign","padding","MESSAGE_COLUMNS","ColumnsPage","0","1","2","setMessages","unsortedMsgs","tempMessages","forEach","msg","newBoard","Post","newMessages","messageID","Item","Edit","i","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById","require","create","baseURL","timeout","headers","interceptors","request","use","config","module","exports"],"mappings":"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","file":"static/js/main.4cc16513.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.a71b81e4.png\";","import React from 'react'\r\nimport \"./HomePage.css\";\r\nimport {Container} from \"reactstrap\";\r\nimport bg from './background.png';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default function HomePage() {\r\n   \r\n    return (\r\n        <div>\r\n            <div className=\"background active\" \r\n            style={{\"backgroundImage\": `url(${bg})`}}>\r\n                <div className=\"carousel-caption\" style={{ \"bottom\": \"30%\"}}>\r\n                <Container className=\"heading\">\r\n                    Improve with Sprint Retrospectives \r\n                <p className=\"lead\">This is a description for the first slide.</p>\r\n                <Link className=\"btn-start\" to=\"/auth/signup\"> Get Started for Free </Link>\r\n                </Container>\r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Navbar,NavItem,NavLink,Collapse,NavbarBrand,Nav, NavbarToggler,Dropdown, DropdownItem, DropdownToggle, DropdownMenu } from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\n\r\nexport default function AppNavBar() {\r\n\r\n    const [isOpen, setIsOpen] = useState(false);\r\n    const [isSignin, setIsSignin] = useState(false);\r\n    const [dropdownOpen, setDropdownOpen] = useState(false);\r\n    const location = useLocation();\r\n    const toggle = () => setIsOpen(!isOpen);\r\n    const dropDown = () => setDropdownOpen(!dropdownOpen);\r\n\r\n    const fontStyle={\r\n        fontFamily: 'thirsty_script_extrabold_deRg',\r\n    }\r\n\r\n    const isTranparent = () =>{\r\n        console.log(location.pathname);\r\n        if (location.pathname.indexOf(\"auth\") !== -1 )\r\n        {\r\n           return { backgroundColor: \"transparent\"};\r\n        }\r\n        return {backgroundColor: '#1e88e5'} \r\n    }\r\n\r\n    return (\r\n    <div>\r\n        <Navbar style={isTranparent()} \r\n        className=\"text-light\" fixed=\"top\" light expand=\"md\">\r\n            <NavbarBrand href=\"/\" className=\"text-light\" style={fontStyle}>Sprint Retro</NavbarBrand>\r\n            <NavbarToggler onClick={toggle} />\r\n            <Collapse isOpen={isOpen} navbar>\r\n                \r\n                {localStorage.getItem('jwt-token')?\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem active>\r\n                        <Dropdown isOpen={dropdownOpen} toggle={dropDown} >\r\n                            <DropdownToggle className=\"nav-link\" style={{backgroundColor: \"transparent\"}}>\r\n                                <FontAwesomeIcon icon={faUserCircle} size=\"lg\"></FontAwesomeIcon>\r\n                            </DropdownToggle>\r\n                            <DropdownMenu>\r\n                                <DropdownItem>\r\n                                    <Link to=\"/profile\" className=\"text-decoration-none\"> Profile</Link>\r\n                                </DropdownItem>\r\n                                <DropdownItem>\r\n                                    <Link to=\"/auth/signout\" className=\"text-decoration-none\"> Sign Out</Link>\r\n                                </DropdownItem>\r\n                            </DropdownMenu>        \r\n                            </Dropdown>\r\n                        </NavItem>           \r\n                    </Nav>\r\n                    :<Nav className=\"ml-auto\" navbar>\r\n                    <NavItem active>\r\n                        <NavLink className=\"text-light\" href=\"/auth/signin\">Sign In</NavLink>\r\n                    </NavItem>\r\n                    <NavItem>\r\n                        <NavLink className=\"text-light\" href=\"/auth/signup\">Sign Up</NavLink>\r\n                    </NavItem>\r\n                </Nav>}\r\n                \r\n            </Collapse>\r\n        </Navbar>\r\n    </div>\r\n    )\r\n}\r\n\r\n","import axiosInstance from './axiosInstance';\r\n\r\nconst axiosRequest = async (method,url, object) =>{\r\n        let response;\r\n        if (method === \"GET\")\r\n        {\r\n            response = await axiosInstance.get(url, object);\r\n        }\r\n        else  if (method === \"POST\")\r\n        {\r\n            response = await axiosInstance.post(url, object);\r\n        }\r\n        else if (method===\"DELETE\")\r\n        {\r\n            response = await axiosInstance.delete(url, { data: { object } });\r\n        }\r\n        else if (method===\"PUT\")\r\n        {\r\n            response = await axiosInstance.put(url, object);\r\n        }\r\n        return response;\r\n    }\r\nexport default axiosRequest;","import React, {useState} from 'react'\r\nimport {Col,Button, Form, FormGroup, Label, Input, Alert} from \"reactstrap\";\r\nimport {Link, useLocation, useHistory} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGoogle, faFacebook } from '@fortawesome/free-brands-svg-icons';\r\nimport axiosRequest from '../../api/axiosRequest';\r\n\r\nexport default function SignIn() {\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setpassword] = useState(\"\");\r\n    const [notice, setNotice] = useState(location.state ? location.state : {\r\n        message: \"\",\r\n        status: 404\r\n    });\r\n    \r\n\r\n    const login = async (e) =>{\r\n        e.preventDefault();\r\n\r\n        const user = {\r\n            email: email,\r\n            password: password,\r\n        };\r\n        try {\r\n            const response= await axiosRequest(\"POST\", \"/auth/signin\",user);\r\n            const data = response.data;\r\n\r\n            if (typeof data.token !== \"undefined\")\r\n            {\r\n                 //Store token \r\n                localStorage.setItem(\"jwt-token\", data.token);\r\n                 history.push(\"/dashboard\");\r\n                \r\n            }\r\n            else if (typeof data.message !== \"undefined\")\r\n            {\r\n                setNotice({\r\n                    message: data.message,\r\n                    status: 404 \r\n                });\r\n            }\r\n          \r\n        } catch (error) {\r\n            \r\n        }\r\n        \r\n    }\r\n    const handleEmailChange = (e) =>\r\n    {\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handlePasswordChange = (e) =>\r\n    {\r\n        setpassword(e.target.value);\r\n    }\r\n\r\n    const isNewAccount = () =>{\r\n        console.log(notice);\r\n        if (notice.status === 200)\r\n        {\r\n            return (<Alert color=\"primary\">\r\n                {notice.message}\r\n            </Alert>)\r\n        }\r\n        else if (notice.message !== \"\")\r\n        {\r\n            return (<Alert color=\"danger\">\r\n                    {notice.message}\r\n                </Alert>)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Col md=\"9\" lg=\"8\" className=\"mx-auto\">\r\n            <h3 className=\"login-heading mb-4\">Welcome back!</h3>\r\n            { isNewAccount() }\r\n            <Form onSubmit={(e) => login(e)}>\r\n                <FormGroup className=\"form-label-group\">\r\n                    <Input type=\"email\" id=\"inputEmail\" onChange={handleEmailChange}\r\n                    placeholder=\"Email\" required></Input>\r\n                    <Label for=\"inputEmail\">Email</Label>\r\n                </FormGroup>\r\n                <FormGroup className=\"form-label-group\">\r\n                    <Input type=\"password\" id=\"inputPassword\" onChange={handlePasswordChange}\r\n                     placeholder=\"Password\" required></Input>\r\n                    <Label for=\"inputPassword\">Password</Label>\r\n                </FormGroup>\r\n                <hr/>\r\n                    <Button type=\"submit\" color=\"primary\" size=\"lg\" block\r\n                    className=\"btn-login text-uppercase font-weight-bold mb-2\"> Sign In</Button>   \r\n                    <div className=\"text-center\">\r\n                        <Link to=\"#\">Forgot password?</Link>\r\n                    </div>\r\n                    <div className=\"text-center\">\r\n                        <Link to=\"/auth/signup\">Sign up</Link>\r\n                    </div>\r\n                <hr/>\r\n                <Button type=\"submit\" color=\"danger\" size=\"lg\" block className=\"btn-login text-uppercase mr-2\">\r\n                    <FontAwesomeIcon icon={faGoogle}> </FontAwesomeIcon>\r\n                    <span>Google sign in</span> \r\n                </Button>\r\n                <Button type=\"submit\" color=\"primary\" size=\"lg\" block className=\"btn-login text-uppercase mr-2\">\r\n                    <FontAwesomeIcon icon={faFacebook}> </FontAwesomeIcon>\r\n                     <span> Facebook sign in</span>\r\n                </Button>\r\n            </Form>\r\n        </Col>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport {Col,Button, Form, FormGroup, Label, Input ,Alert} from \"reactstrap\";\r\nimport {Link, useHistory} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGoogle, faFacebook } from '@fortawesome/free-brands-svg-icons';\r\n\r\nimport axiosRequest from '../../api/axiosRequest';\r\n\r\nexport default function SignUp() {\r\n\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setpassword] = useState(\"\");\r\n    const history = useHistory();\r\n    const [rePassword, setRePassword] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const handleEmailChange = (e)=>{\r\n        setEmail(e.target.value);\r\n    }\r\n\r\n    const handleUsernameChange = (e)=>{\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    const handlePasswordChange = (e)=>{\r\n        setpassword(e.target.value);\r\n    }\r\n    \r\n    const handleRePasswordChange = (e)=>{\r\n        comparePassword(password,e.target.value);\r\n        setRePassword(e.target.value);\r\n        \r\n    }\r\n    \r\n    const comparePassword = (password, rePassword) =>{\r\n        if (password !== \"\")\r\n        {\r\n            if (password !== rePassword)\r\n            {\r\n                setError(\"Password is not match!!!\");\r\n            }\r\n            // else if (password.length < 6){\r\n            //     setError(\"password must be at least 6 character\");\r\n            // }\r\n            else{\r\n                setError(\"\");\r\n            }\r\n        }\r\n    }\r\n\r\n    const registerNewAccount = async (e)=>{\r\n        e.preventDefault();\r\n\r\n        let newUser = {\r\n            email: email,\r\n            username: username,\r\n            password: password,\r\n        }\r\n        try {\r\n            const response = await axiosRequest(\"POST\",\"/auth/signup\", newUser);\r\n            console.log(response.data);\r\n            if (response.status === 200 && !response.data.message)\r\n            {\r\n                history.push({\r\n                    pathname: \"/auth/signin\",\r\n                    state: {\r\n                        message: \"sign up success !!\",\r\n                        status: 200,\r\n                    }\r\n                });\r\n            }\r\n            else{\r\n                setError(response.data.message);\r\n            }\r\n\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <Col md=\"9\" lg=\"8\" className=\"mx-auto\">\r\n        <h3 className=\"login-heading mb-4\">Register</h3>\r\n        {\r\n            error === \"\"? null:\r\n            <Alert color=\"danger\">\r\n                {error}\r\n            </Alert>\r\n        }\r\n        <Form onSubmit={(e) => {registerNewAccount(e)}}>\r\n            <FormGroup className=\"form-label-group\">\r\n                <Input type=\"email\" id=\"inputEmail\"  onChange={handleEmailChange}\r\n                placeholder=\"Email address\" required></Input>\r\n                <Label for=\"inputEmail\">Email address</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"form-label-group\">\r\n                <Input type=\"text\" id=\"inputusername\" onChange={handleUsernameChange} \r\n                placeholder=\"Username\" required ></Input>\r\n                <Label for=\"inputEmail\">Username</Label>\r\n            </FormGroup>\r\n            <hr/>\r\n            <FormGroup className=\"form-label-group\">\r\n                <Input type=\"password\" id=\"inputPassword\" onChange={handlePasswordChange} \r\n                placeholder=\"Password\" required></Input>\r\n                <Label for=\"inputPassword\">Password</Label>\r\n            </FormGroup>\r\n            <FormGroup className=\"form-label-group\">\r\n                <Input type=\"password\" id=\"reInputPassword\" onChange={handleRePasswordChange} \r\n                placeholder=\"Re Password\" required></Input>\r\n                <Label for=\"reInputPassword\">Re Password</Label>\r\n            </FormGroup>\r\n            <hr/>\r\n                <Button type=\"submit\" color=\"primary\" size=\"lg\" block\r\n                className=\"btn-login text-uppercase font-weight-bold mb-2\"> Sign Up</Button>   \r\n                <div className=\"text-center\">\r\n                    <Link to=\"/auth/signin\">Sign In</Link>\r\n                </div>\r\n            <hr/>\r\n            <Button type=\"submit\" color=\"danger\" size=\"lg\" block className=\"btn-login text-uppercase mr-2\">\r\n                <FontAwesomeIcon icon={faGoogle}> </FontAwesomeIcon>\r\n                <span>Google sign up</span> \r\n            </Button>\r\n            <Button type=\"submit\" color=\"primary\" size=\"lg\" block className=\"btn-login text-uppercase mr-2\">\r\n                <FontAwesomeIcon icon={faFacebook}> </FontAwesomeIcon>\r\n                 <span> Facebook sign up</span>\r\n            </Button>\r\n        </Form>\r\n    </Col>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background.f9ad7e16.png\";","import React from 'react'\r\nimport {Container,Row, Col} from 'reactstrap';\r\n\r\nimport AppNavBar from '../../components/AppNavBar';\r\nimport SignIn from './SignIn';\r\nimport SignUp from './SignUp';\r\nimport './user.css';\r\nimport bg from './background.png';\r\n\r\nexport default function UserPage({option}) {\r\n    return (\r\n        <div className=\"overflow-hidden\">\r\n            <AppNavBar isTransparent={true}></AppNavBar>\r\n            <Container fluid={true}>\r\n                <Row> \r\n                    <Col xs=\"6\" md=\"5\" className=\"bg-image d-none d-md-flex\" style={{\"backgroundImage\": `url(${bg})`}}></Col>\r\n                    <Col md=\"7\" lg=\"6\">\r\n                        <div className=\"login d-flex align-items-center py-5\">\r\n                            <Container>\r\n                                <Row>\r\n                                    {\r\n                                        option === \"signin\"?\r\n                                        <SignIn></SignIn>\r\n                                        : <SignUp></SignUp>\r\n                                    }\r\n                                </Row>\r\n                            </Container>\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Container, Row,Col, FormGroup,Form, Label, Input, Button, Alert} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUserCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport './profile.css';\r\nimport axiosRequest from '../../api/axiosRequest';\r\n\r\nexport default function ProfilePage() {\r\n\r\n    const history = useHistory();\r\n    const [changePass, setChangePass] = useState(false);\r\n    const [username, setUsername] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [board, setBoard] = useState(0);\r\n    const [password, setpassword] = useState(\"\");\r\n    const [newPassword, setNewPassword] = useState(\"\");\r\n    const[notice, setNotice] = useState(\"\");\r\n    const[currentUserInfo, setCurrentUserInfo] = useState({});\r\n    \r\n    const handleEmailChange = (e)=> setEmail(e.target.value);\r\n\r\n    const handleUsernameChange = (e)=> setUsername(e.target.value);\r\n\r\n    const handlePasswordChange = (e)=> setpassword(e.target.value);\r\n    \r\n    const handleNewPasswordChange = (e)=>{\r\n        \r\n        setNewPassword(e.target.value);\r\n        \r\n    }\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            try {\r\n                const response = await axiosRequest(\"GET\", \"/profile\");\r\n                const userInfo = response.data;\r\n                console.log(userInfo);\r\n                \r\n                //set dat for state\r\n                setUsername(userInfo.username);\r\n                setEmail(userInfo.email);\r\n                setBoard(userInfo.sprints.length);\r\n                setCurrentUserInfo(userInfo);\r\n                \r\n            } catch (error) {\r\n                console.log(error.response);\r\n                if (error.response.status >= 400 && error.response.status <= 500)\r\n                {\r\n                    history.push(\"/auth/signin\");\r\n                    localStorage.removeItem(\"jwt-token\");  \r\n                }\r\n                else{\r\n                    setNotice(\"Can not get data from server\");\r\n                }\r\n            }\r\n        }\r\n        fetchData();\r\n    },[history]);\r\n\r\n\r\n    const changePassword = () => setChangePass(!changePass);\r\n\r\n    //  CHANGE user's infomation using POST method ===========================================\r\n    const changeUSerInfo =async (e) =>{\r\n        e.preventDefault();\r\n\r\n        // B1: create new user from state\r\n        const changedUser = {\r\n            isPassChange: changePass,\r\n            isEmailChange: true,\r\n            user: {\r\n                username: username,\r\n                email: email,\r\n                password: password,\r\n                newPassword: newPassword,\r\n            }\r\n            \r\n        };\r\n        if (email !== currentUserInfo.email || username !== currentUserInfo.username || changePass)\r\n        {\r\n        \r\n            if (email === currentUserInfo)\r\n            {\r\n                changedUser.isEmailChange = false;\r\n            }\r\n        //B2 : post to server to update info of user\r\n            try {\r\n                const response = await axiosRequest('POST', '/profile', changedUser);\r\n                const data = response.data;\r\n               \r\n                if (typeof data.result !== \"undefined\" && typeof data.token !== \"undefined\")\r\n                {\r\n                    setUsername(data.result.username);\r\n                    setEmail(data.result.email);\r\n                    setBoard(data.result.sprints.length);\r\n                    setCurrentUserInfo(data.result);\r\n\r\n                    localStorage.removeItem(\"jwt-token\");\r\n                    localStorage.setItem(\"jwt-token\", data.token);\r\n\r\n                    setNotice(\"\");\r\n                }\r\n                if(typeof data.message !== \"undefined\")\r\n                {\r\n                   \r\n                    setNotice(data.message);\r\n                }\r\n            } catch (error) {\r\n                if (error.response.status >= 400 && error.response.status < 500)\r\n                {\r\n                    history.push(\"/auth/signin\");\r\n                    localStorage.removeItem(\"jwt-token\");  \r\n                }\r\n                else{\r\n                    setNotice(error);\r\n                    alert(error);\r\n                }\r\n            }   \r\n        }\r\n        else{\r\n            setNotice(\"User's information did not change\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n       \r\n        <Container >\r\n            <h2 className=\"text-center profile-header\">Thông tin tài khoản</h2>\r\n            <Row className=\"justify-content-md-center profile\">\r\n                <Container > {\r\n                    notice!==\"\"? <Alert color=\"warning\" className=\"text-lg-center\">{notice}</Alert>\r\n                    : null\r\n                }\r\n                </Container>\r\n                <Col lg=\"2\">\r\n                    <FontAwesomeIcon icon={faUserCircle} size=\"6x\"></FontAwesomeIcon>\r\n                </Col>\r\n                <Col lg=\"8\">\r\n                    <Form onSubmit={(e) => changeUSerInfo(e)}>\r\n                        <FormGroup>\r\n                            <Label className=\"control-label\" for=\"username\">Username</Label>\r\n                            <Input type=\"text\" id=\"username\" onChange={handleUsernameChange}\r\n                                value={username} placeholder=\"Username\"/>                               \r\n                        </FormGroup>\r\n                      \r\n                        <FormGroup>\r\n                            <Label className=\"control-label\" for=\"email\">Email</Label>\r\n                            <Input type=\"email\" id=\"email\" onChange={handleEmailChange}\r\n                                value={email} placeholder=\"Email\"></Input>\r\n                        </FormGroup>\r\n                            <Label >Number of board: {board}</Label>\r\n                        <hr/>\r\n                        <FormGroup>     \r\n                            <Input type=\"checkbox\" id=\"is_change_pass\" name=\"is_change_pass\"\r\n                                checked={changePass} onChange={changePassword}></Input>                     \r\n                            <Label className=\"control-label\" for=\"is_change_pass\">Change password?</Label>    \r\n                        </FormGroup>\r\n                        {\r\n                            changePass?\r\n                            <FormGroup>\r\n                                <FormGroup>\r\n                                    <Label className=\"control-label\" for=\"password\">Password </Label>\r\n                                    <Input type=\"password\" id=\"password\" onChange={handlePasswordChange}\r\n                                         value={password} autoComplete=\"off\" placeholder=\"password\"></Input>\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <Label className=\"control-label\" for=\"new-password\">New password </Label>\r\n                                    <Input type=\"password\" id=\"new_password\" onChange={handleNewPasswordChange}\r\n                                         value={newPassword} autoComplete=\"off\" placeholder=\"New password\"></Input>\r\n                                </FormGroup>\r\n                               \r\n                            </FormGroup>\r\n                            :null\r\n                        }\r\n                        <FormGroup>\r\n                            <Button color=\"primary\" size=\"lg\" outline type=\"submit\">Save</Button>\r\n                        </FormGroup>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n        </div>                                    \r\n\r\n    )\r\n}\r\n","import React, {useState} from 'react'\r\nimport {Modal,ModalHeader, ModalBody ,Form, FormGroup, Label, Input, Button} from 'reactstrap';\r\n\r\nexport default function CreateBoardModal({modal,toggle, addNewBoard}) {\r\n\r\n    const [boardName, setBoardName] = useState(\"\");\r\n    \r\n    const handleBoardNameChange = (e) => setBoardName(e.target.value);\r\n\r\n    const createNewBoard = (e) =>{\r\n        e.preventDefault();\r\n            let board = {\r\n                title: boardName,\r\n                isActive: true,\r\n            }\r\n            addNewBoard(board);\r\n    }\r\n    return (\r\n      \r\n       <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle} className=\"text-uppercase justify-content-lg-around\"> \r\n                Create Board\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <Form onSubmit={(e) => {createNewBoard(e); toggle()}}>\r\n                    <FormGroup >\r\n                        <Label  for=\"boardName\">Board Name</Label>\r\n                        <Input type=\"text\" onChange={handleBoardNameChange}\r\n                        placeholder=\"Input board name\"></Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label>Template</Label>\r\n                        <h5>Went Wel - To Improve - Action Items</h5>\r\n                    </FormGroup>                \r\n                    <FormGroup>\r\n                       <Button color=\"primary\" block outline type=\"submit\">Save</Button>\r\n                    </FormGroup>\r\n                </Form>\r\n            </ModalBody>\r\n       </Modal>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Modal,ModalHeader, ModalBody, Input} from 'reactstrap';\r\nexport default function ShareLinkModal({modal, toggle, link}) {\r\n    return (\r\n        <Modal isOpen={modal} toggle={toggle}>\r\n            <ModalHeader toggle={toggle} className=\"text-uppercase justify-content-lg-around\"> \r\n                Share Link\r\n            </ModalHeader>\r\n            <ModalBody>\r\n                <Input type='text' readOnly defaultValue={link}></Input>\r\n            </ModalBody>\r\n        </Modal>\r\n    )\r\n}\r\n","import React, {useState, useEffect} from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlusCircle,faClock,faCopy,faClone,faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport {useHistory} from 'react-router-dom';  \r\nimport {Button} from 'reactstrap';\r\n\r\nimport './dashboard.css';\r\nimport './boardList.css';\r\nimport CreateBoardModal from './CreateBoardModal';\r\nimport axiosRequest from '../../api/axiosRequest';\r\nimport ShareLinkModal from './ShareLinkModal';\r\nexport default function BoardList() {\r\n\r\n    const [boardList, setBoardList] = useState([]);\r\n    const [isOpenAdd, setisOpenAdd] = useState(false);\r\n    const [isOpenShare, setisOpenShare] = useState(false);\r\n    const [sprint, setSprint] = useState(\"\");\r\n    const history = useHistory();\r\n    const [shareLink, setShareLink] = useState(\"\");\r\n\r\n    const handleOpenAddModal = () => setisOpenAdd(!isOpenAdd);\r\n\r\n    const handleOpenShareModal = () => setisOpenShare(!isOpenShare);\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n          try\r\n          {\r\n            const response = await axiosRequest(\"GET\", \"/dashboard\");\r\n            let data = response.data;\r\n            if (response.status=== 200)\r\n            {\r\n              data = data.boards.map(sprint =>{\r\n                  let d = new Date(sprint.createTime);   \r\n                  let formatted_date =  d.getDate() + '/' + (d.getMonth() + 1) +'/'+ d.getFullYear();\r\n                  sprint.createTime = formatted_date; \r\n                  return sprint;\r\n              });\r\n              console.log(data);\r\n              setBoardList(data);\r\n            }\r\n          }\r\n          catch(error) {\r\n            if (error.response.status >= 400 && error.response.status < 500)\r\n            {\r\n                history.push(\"/auth/signin\");\r\n                localStorage.removeItem(\"jwt-token\");\r\n            }\r\n            else{\r\n                alert(error);\r\n            }\r\n            \r\n        }\r\n        }\r\n        fetchData();\r\n        },[history]);\r\n\r\n\r\n    // open Dialog ==============================================\r\n    const openColumnPage = (sprintid) => \r\n    {\r\n        setSprint(sprintid);\r\n        console.log(sprint);\r\n        history.push(`/dashboard/${sprintid}`);\r\n    }\r\n\r\n    // DELETE board ====================================================\r\n    const deleteBoard = async (deletedboard) =>{\r\n        try {\r\n            const result = await axiosRequest(\"DELETE\", \"/dashboard\", deletedboard);\r\n            console.log({deletedboard});\r\n            if(result.status === 200)\r\n            {\r\n                console.log(result);\r\n                const newBoardList = boardList.filter(board => board._id !== deletedboard._id);\r\n                setBoardList(newBoardList);\r\n            }\r\n        } catch (error) {\r\n            if (error.response.status >= 400 && error.response.status < 500)\r\n            {\r\n                history.push(\"/auth/signin\");\r\n                localStorage.removeItem(\"jwt-token\");\r\n            }\r\n            else{\r\n                alert(error);\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    // handle add new board ============================================\r\n    const addNewBoard = async (board) =>{\r\n        try {\r\n            const response = await axiosRequest(\"POST\",'/dashboard', board);\r\n            \r\n            if (response.status === 200)\r\n            {\r\n                let d = new Date(response.data.createTime);  \r\n                board = response.data; \r\n                let formatted_date =  d.getDate() + '/' + (d.getMonth() + 1) +'/'+ d.getFullYear();\r\n                    \r\n                board.createTime = formatted_date; \r\n                boardList.push(board);\r\n                const newBoardList = Array.from(boardList);\r\n                setBoardList(newBoardList);\r\n            }\r\n\r\n        } catch (error) {\r\n            if (error.response.status >= 400 && error.response.status < 500)\r\n            {\r\n                history.push(\"/auth/signin\");\r\n                localStorage.removeItem(\"jwt-token\");\r\n            }\r\n            else\r\n            {\r\n                alert(error);\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    //SHARE board link ===========================================================\r\n    const shareBoardLink = (board) =>{\r\n        const webLink = process.env.REACT_APP_ENV === 'develop'? process.env.REACT_APP_DEV_SITE :process.env.REACT_APP_PRODUCT_SITE;\r\n        setShareLink(`${webLink}/dashboard/${board._id}`);\r\n        handleOpenShareModal();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        {(<div>\r\n            <CreateBoardModal modal={isOpenAdd} toggle={handleOpenAddModal}\r\n             addNewBoard={addNewBoard}></CreateBoardModal>\r\n             <ShareLinkModal modal={isOpenShare} toggle={handleOpenShareModal}\r\n             link={shareLink}></ShareLinkModal>\r\n            <ul>\r\n            <li className=\"dashboard-item add-item\" onClick={handleOpenAddModal}>\r\n                <span className=\"add\">\r\n                <FontAwesomeIcon icon={faPlusCircle} size=\"4x\"/>\r\n                <small>Add board</small>\r\n                </span>\r\n            </li>\r\n            {\r\n                boardList.map(board =>{\r\n                    return (\r\n                        <li className='dashboard-item' key={board._id}>\r\n                            <div className=\"dashboard-item-body\">\r\n                                <div onClick={() => openColumnPage(board._id)}>\r\n                                <p>{board.title}</p>\r\n                                <div className=\"date-and-number\">\r\n                                    <span className=\"board-date\">\r\n                                        <FontAwesomeIcon icon={faClock}></FontAwesomeIcon>\r\n                                        {board.createTime.toLocaleString()}\r\n                                    </span>\r\n                                    <span className=\"board-date\">{board.columns.length} cards</span>\r\n                                </div>\r\n                                </div>\r\n                                <div className=\"board-actions\">\r\n                                    <Button className=\"text-decoration-none\" color=\"link\"\r\n                                     onClick={() => shareBoardLink(board)}>\r\n                                        <FontAwesomeIcon icon={faCopy}></FontAwesomeIcon>\r\n                                         URL \r\n                                    </Button>\r\n                                    <Button className=\"text-decoration-none\" color=\"link\">\r\n                                        <FontAwesomeIcon icon={faClone}></FontAwesomeIcon>\r\n                                        Clone\r\n                                    </Button>\r\n                                    <Button color=\"link\" className=\"text-decoration-none\" onClick={() =>{deleteBoard(board)}}>\r\n                                        <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon>\r\n                                        Delete\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    );\r\n                })\r\n            }\r\n        </ul>\r\n           \r\n        </div>)\r\n        }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport BoardList from './BoardList';\r\n\r\nexport default function Dashboard() {\r\n    return (      \r\n          <div className=\"dashboard\">\r\n          \r\n            <h1>My Boards</h1>\r\n            <hr></hr>\r\n            <BoardList></BoardList>\r\n          </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Form, FormGroup, Row, Col ,Input, Button}from 'reactstrap';\r\n\r\nexport default function AddMessageCard({addNewMessage, handleChangeMsg}) {\r\n    return (\r\n        <Form onSubmit={addNewMessage}>\r\n                <Row className=\"flex-end-btn\">\r\n                    <Col xs=\"8\">\r\n                        <FormGroup> \r\n                            <Input type=\"text\" onChange={handleChangeMsg}></Input>\r\n                        </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"3\">\r\n                        <FormGroup>\r\n                            <div></div>\r\n                            <Button color=\"primary\" block type=\"submit\">Save</Button>\r\n                        </FormGroup>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport{Button} from 'reactstrap';\r\nimport './card.css'\r\nexport default function MessageCard({message, openEdit,deleteMessage}) {\r\n    return (\r\n        <>\r\n        <div className=\"message-body\">\r\n            <div className=\"text\">\r\n                {message.comment}\r\n            </div>\r\n            </div>\r\n            <Button onClick={() => openEdit(message)} \r\n            color=\"link\" style={{color: \"white\"}}>\r\n                <FontAwesomeIcon icon={faEdit}></FontAwesomeIcon>\r\n            </Button>\r\n            <Button onClick={() => deleteMessage(message._id)} \r\n            color=\"link\" style={{color: \"white\"}}>\r\n                <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon>\r\n            </Button>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport {Form, Row, Col, FormGroup, Input, Button} from 'reactstrap';\r\nexport default function EditMessageCard({message,\r\n                                         handleEditMsg, \r\n                                         changedMsg,\r\n                                        editMessage\r\n                                    }) {\r\n    return (\r\n        <Form onSubmit={(e) => editMessage(e,message)}>\r\n            <Row className=\"flex-end-btn\">\r\n                <Col xs=\"8\">\r\n                    <FormGroup> \r\n                        <Input type=\"text\" onChange={handleEditMsg}\r\n                        value={changedMsg}></Input>\r\n                    </FormGroup>\r\n                </Col>\r\n                <Col xs=\"3\">\r\n                    <FormGroup>\r\n                        <div></div>\r\n                        <Button color=\"primary\" block type=\"submit\">Save</Button>\r\n                    </FormGroup>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    )\r\n}\r\n","import React, {useState} from 'react';\r\nimport {useLocation} from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus} from '@fortawesome/free-solid-svg-icons';\r\nimport {Button} from 'reactstrap';\r\n\r\nimport './column.css';\r\nimport AddMessageCard from './Cards/AddMessageCard';\r\nimport MessageCard from './Cards/MessageCard';\r\nimport EditMessageCard from './Cards/EditMessageCard';\r\nexport default function Column({column,\r\n                                messages,\r\n                                addNewMsg,\r\n                                deleteMsg,\r\n                                editMsg,\r\n                            }) {\r\n\r\n    const location = useLocation();\r\n    const [tempMsg, settempMsg] = useState(\"\");\r\n    const [changedMsg, setChangedMsg] = useState(\"\");\r\n   \r\n    const [msgIdEdited, setmsgIdEdited] = useState(\"\");                     \r\n    const [isOpenAddCard, setIsOpenAddCard] = useState(false);\r\n\r\n     //Add new message =================================================================\r\n\r\n     const handleChangeMsg  = (e) => settempMsg (e.target.value);\r\n     const isOpenAddMsgCard = () => setIsOpenAddCard(!isOpenAddCard);\r\n     \r\n     const addNewMessage = async (e) =>{\r\n         e.preventDefault();\r\n \r\n         const newMsg = {\r\n             columnType: column.type,\r\n             comment: tempMsg,\r\n             isActive: true,\r\n             sprintID: location.pathname.split('/')[2],\r\n             order: 1,\r\n         }\r\n         \r\n         addNewMsg(newMsg);\r\n         setIsOpenAddCard(!isOpenAddCard);\r\n     }\r\n \r\n     //Edit messgae ====================================================================\r\n     const handleEditMsg = (e) => setChangedMsg(e.target.value);\r\n \r\n     const editMessage = (e, message)=>{\r\n         e.preventDefault();\r\n         const changedMessage = {\r\n             _id:  message._id,\r\n             columnType: column.type,\r\n             comment: changedMsg,\r\n             isActive: message.isActive,\r\n             sprintID: location.pathname.split('/')[2],\r\n             order: 1,\r\n         }\r\n \r\n         editMsg(changedMessage);\r\n\r\n        setmsgIdEdited(-1);\r\n     }\r\n \r\n    const openEditFormForMessage = (message) => {\r\n        setChangedMsg(message.comment);\r\n        setmsgIdEdited(message._id);\r\n        console.log(\"ssssss\");\r\n     }\r\n    \r\n     const deleteMessage = (msgid) =>{\r\n         deleteMsg(msgid, column.type);\r\n     }\r\n\r\n\r\n    return (\r\n        <div className=\"message-list overflow-hidden\">\r\n        <div className=\"color-picker\">\r\n        <span className=\"color-picker-selected\" style={column.style}></span>\r\n        <span className=\"column-name\">{column.name}</span>\r\n        </div>\r\n        <Button outline color=\"primary\" block className=\"btn-add\" onClick={isOpenAddMsgCard}>\r\n            <FontAwesomeIcon icon={faPlus}></FontAwesomeIcon>\r\n        </Button>\r\n        <ul>\r\n            {isOpenAddCard?\r\n            <li className=\"message\" style={column.style}>\r\n                <AddMessageCard addNewMessage={addNewMessage} handleChangeMsg={handleChangeMsg}></AddMessageCard>\r\n            </li>\r\n            :null\r\n            }\r\n            {\r\n            messages.map(message =>{\r\n                if (msgIdEdited === message._id)\r\n                {                  \r\n                    return <li className=\"message\" style={column.style} key={message._id}>\r\n                        <EditMessageCard \r\n                        message={message}\r\n                        handleEditMsg={handleEditMsg} \r\n                        changedMsg={changedMsg}\r\n                        editMessage={editMessage}\r\n                        ></EditMessageCard>\r\n                    </li>\r\n                }\r\n                else{\r\n                    return (\r\n                        <li className=\"message\" style={column.style} key={message._id}>\r\n                            <MessageCard message={message} \r\n                            openEdit={openEditFormForMessage} \r\n                            deleteMessage={deleteMessage}>  \r\n                            \r\n                            </MessageCard>\r\n                        </li>);\r\n                }\r\n                \r\n            })  \r\n                                        \r\n            }                                \r\n        </ul>\r\n    </div>\r\n    )\r\n}\r\n","import React, { useState} from 'react';\r\nimport {Button, Form, Row, Col, Label, Input} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit} from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './card.css';\r\n\r\nexport default function ChangeBoardName({board, changeBoardName}) {\r\n\r\n\r\n    const handleBoardNameChange = (e) => {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n\r\n    const [title, setTitle] = useState(\"\");\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const handleChangeBoardName = async (e) =>{\r\n        e.preventDefault();\r\n        let changedBoard = Object.assign({}, board);\r\n        changedBoard.title = title;\r\n        //console.log(changedBoard);\r\n       changeBoardName(changedBoard); \r\n       \r\n        toggle();\r\n    }\r\n\r\n    const toggle = () => setIsOpen(!isOpen);\r\n\r\n    return (\r\n        <div>\r\n            <Link type=\"button\"  className=\"go-back-link\" to=\"/dashboard\">/Dashboard</Link>\r\n           \r\n           <Row className=\"change-board-name-text\">\r\n           {isOpen?\r\n                <Form onSubmit={(e) => handleChangeBoardName(e)} className=\"form\">\r\n                    <Row>\r\n                    <Col md={6}>\r\n                        \r\n                        <Input type=\"text\" className=\"form-input\" onChange={handleBoardNameChange}\r\n                        defaultValue={board.title}></Input>\r\n                    </Col>\r\n                    <Col md={4}>\r\n                        <Button color=\"primary\" outline type=\"submit\">Save</Button>\r\n                        <Button color='link' outline onClick={toggle}> Cancel</Button>\r\n                    </Col>\r\n                    </Row>        \r\n                </Form>\r\n           :\r\n           <>\r\n                <Label style={{padding: \"10px 30px 0px 30px\"}}>{board.title}</Label>\r\n                <Button color=\"link\" onClick={toggle}>\r\n                    <FontAwesomeIcon icon={faEdit}></FontAwesomeIcon>\r\n                </Button>\r\n            </>\r\n            }\r\n            </Row>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","const MESSAGE_COLUMNS  = [\r\n        {   \r\n            name: \"Went Well\",\r\n            style: {\r\n                \"backgroundColor\": \"green\",\r\n                \"color\": \"white\",\r\n            },\r\n            type: 0\r\n        },\r\n        {\r\n            name: \"To Improve\",\r\n            style: {\r\n                \"backgroundColor\": \"orange\",\r\n                \"color\": \"white\",\r\n            },\r\n            type: 1\r\n        },\r\n        {\r\n            name: \"Action Items\",\r\n            style: {\r\n                \"backgroundColor\": \"blue\",\r\n                \"color\": \"white\",\r\n            },\r\n            type: 2\r\n        },\r\n];\r\n\r\n\r\nexport default MESSAGE_COLUMNS;","import React, {useEffect, useState} from 'react';\r\nimport { useLocation, useHistory} from \"react-router-dom\";\r\n\r\n\r\nimport './column.css';\r\nimport axiosRequest from '../../api/axiosRequest';\r\nimport Column from './Column';\r\nimport ChangeBoardName from './Cards/ChangeBoardName';\r\nimport MESSAGE_COLUMNS from './ColumnTemplate';\r\n\r\n\r\nexport default function ColumnsPage() {\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const [board, setBoard] = useState({});\r\n    const [messages,setMessages] = useState({\r\n        0: [],\r\n        1: [],\r\n        2: []\r\n    }); \r\n\r\n    // GET data from server ================================================ \r\n    useEffect(()=>{\r\n        const fetchData = async() =>{\r\n            try {\r\n            const response = await axiosRequest('GET',location.pathname);\r\n            let data = response.data;\r\n           \r\n            if (response.status === 200)\r\n            {\r\n                let unsortedMsgs = Array.from(data.columns);\r\n                let tempMessages = {\r\n                    0: [],\r\n                    1: [],\r\n                    2: []\r\n                };\r\n                setBoard(data);\r\n               \r\n               \r\n                unsortedMsgs.forEach(msg => {\r\n                    const type = msg.columnType;\r\n                    tempMessages[type].push(msg);\r\n                });\r\n                setMessages(tempMessages);\r\n                //console.log(messages[0].length + messages[1].length + messages[2].length !== unsortedMsgs.length);\r\n                \r\n\r\n            }\r\n\r\n            } catch (error) {\r\n               \r\n                if (error.response.status >= 400 && error.response.status < 500)\r\n                {\r\n                    history.push(\"/auth/signin\");\r\n                    localStorage.removeItem(\"jwt-token\");\r\n                }\r\n                else{\r\n                    alert(\"can not get data from server\");\r\n                }\r\n                \r\n            }\r\n        }\r\n        fetchData();\r\n    },[location.pathname, history]);\r\n\r\n    // CHANGE board name ==================================================================\r\n    const changeBoardName= async (changedBoard) =>{\r\n        try {\r\n            const response = await axiosRequest(\"PUT\",location.pathname, changedBoard);\r\n            if (response.status === 200)\r\n            {\r\n                console.log(response.data);\r\n                const newBoard = Object.assign({}, changedBoard);\r\n                setBoard(newBoard);    \r\n            }\r\n            \r\n        } catch (error) {\r\n            if (error.response.status >= 400 && error.response.status < 500)\r\n            {\r\n                history.push(\"/auth/signin\");\r\n                localStorage.removeItem(\"jwt-token\");\r\n            }\r\n            else{\r\n                alert(\"can not change board name\");\r\n            }\r\n        }\r\n    }\r\n\r\n    //ADD new message ======================================================================\r\n    const addNewMessage = async (newMsg) =>{\r\n        try {\r\n            //B1: post new message to server\r\n            const response = await axiosRequest('POST',location.pathname, newMsg);\r\n            const data = response.data;\r\n            console.log({Post: data});\r\n            //B2: check response status\r\n            if (response.status === 200)\r\n            {\r\n                //B3: Add new message to messages object\r\n                const type = data.columnType;\r\n                const newMessages = Object.assign({}, messages);\r\n                newMessages[type].push(data);               \r\n                setMessages(newMessages);\r\n                \r\n            }\r\n        } catch (error) {\r\n            if (error.response.status >= 400 && error.response.status < 500)\r\n            {\r\n                history.push(\"/auth/signin\");\r\n                localStorage.removeItem(\"jwt-token\");\r\n            }\r\n            else{\r\n                //error handle\r\n            alert(\"can not add new message\");\r\n            }\r\n        }\r\n    }\r\n\r\n    // DELETE message ===============================================================\r\n    const deleteMessage = async (messageID, type) =>{\r\n        try {\r\n            //B1: delete message with DELETE method\r\n            console.log(location.pathname);\r\n            const response = await axiosRequest(\"DELETE\", `${location.pathname}/${messageID}`, messageID);\r\n            \r\n            if (response.status === 200)\r\n            {       \r\n                //B3: Change message and re render  \r\n                \r\n                const newMessages = Object.assign({}, messages);\r\n                //delete messages[type];\r\n                newMessages[type] = messages[type].filter(msg => msg._id !== messageID);\r\n                console.log(messages);\r\n                setMessages(newMessages);\r\n            }\r\n        } catch (error) {\r\n            if (error.response.status >= 400 && error.response.status < 500)\r\n            {\r\n                history.push(\"/auth/signin\");\r\n                localStorage.Item(\"jwt-token\");\r\n            }\r\n             else\r\n             {\r\n                 //error handle\r\n             alert(error);\r\n             }\r\n        }\r\n    }\r\n\r\n    //EDIT message ================================================================\r\n    const editMessage = async (changedMessage) =>{\r\n        try {\r\n            //B1: change message with PUT method\r\n            const response = await axiosRequest('PUT',`${location.pathname}/${changedMessage._id}`, changedMessage);\r\n            const data = response.data;\r\n            console.log({Edit: data});\r\n            //B2: check response status\r\n            if (response.status === 200)\r\n            {               \r\n                //B3: update messages list\r\n                const type = changedMessage.columnType;\r\n                const newMessages = Object.assign({}, messages);\r\n                newMessages[type] = messages[type].map(message =>{\r\n                    if (message._id === data._id)\r\n                    {\r\n                        return data;\r\n                    }\r\n                    return message;\r\n                })\r\n                console.log(newMessages);\r\n                setMessages(newMessages);\r\n            }\r\n            \r\n            \r\n        } catch (error) {\r\n            if (error.response.status >= 400 && error.response.status < 500)\r\n            {\r\n                history.push(\"/auth/signin\");\r\n                localStorage.removeItem(\"jwt-token\");\r\n            }\r\n            else{\r\n                alert(\"can not edit message\");\r\n            }\r\n            //error handle\r\n            \r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n      \r\n       <div>\r\n            <div className=\"column\">\r\n                <ChangeBoardName board={board} changeBoardName={changeBoardName}></ChangeBoardName>\r\n                <hr/>\r\n                <div className=\"column-container\">\r\n                    {\r\n                    MESSAGE_COLUMNS.map((column,i) =>{\r\n                        return <Column column={column} \r\n                        messages={messages[i]}\r\n                        addNewMsg={addNewMessage}\r\n                        deleteMsg={deleteMessage}\r\n                        editMsg={editMessage}\r\n                        key={i}\r\n                        ></Column>\r\n                    })\r\n                    }\r\n                </div>                              \r\n            </div>\r\n       </div>\r\n    )\r\n    \r\n}\r\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch, Redirect} from 'react-router-dom';\n\nimport './domain/Dashboard/dashboard.css';\n\nimport HomePage from './domain/Home/HomePage';\nimport UserPage from './domain/Auth/UserPage';\nimport ProfilePage from './domain/Profile/ProfilePage';\nimport Dashboard from './domain/Dashboard/Dashboard';\nimport ColumnsPage from './domain/Column/ColumnsPage';\nimport AppNavBar from './components/AppNavBar';\n\nfunction App() {\n  return (\n    \n    <Router>\n    <AppNavBar></AppNavBar>\n      <Switch>\n        <Route path=\"/sprint-retro-app\">\n          <Redirect to=\"/\"></Redirect>\n        </Route>\n        <Route path=\"/auth/signin\">\n          <UserPage option=\"signin\"></UserPage>\n        </Route>\n        <Route path=\"/auth/signup\">\n          <UserPage option=\"signup\"></UserPage>\n        </Route>\n        <Route path=\"/profile\">\n          <ProfilePage></ProfilePage>\n        </Route>\n        \n        <Route path=\"/dashboard/:sprintid\">\n          <ColumnsPage></ColumnsPage>\n        </Route>\n        <Route path=\"/dashboard\">\n          <Dashboard/>\n        </Route>\n        <Route exact path=\"/\">\n          <HomePage></HomePage>\n        </Route>\n      </Switch>   \n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n \n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const axios = require('axios');\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: process.env.REACT_APP_ENV === \"develop\"? process.env.REACT_APP_DEV_SITE: process.env.REACT_APP_PRODUCT_SITE,\r\n    timeout: 10000,\r\n    headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Access-Control-Allow-Methods\": \"GET,HEAD,OPTIONS,POST,PUT,PATCH,DELETE\",\r\n        \"Access-Control-Allow-Headers\":\"Origin, X-Requested-With, Content-Type, Accept,Authorization\",\r\n\r\n    }\r\n  });\r\n\r\n  axiosInstance.interceptors.request.use((config) => {\r\n    //if token is exists, set header\r\n    const token = localStorage.getItem(\"jwt-token\");\r\n    if (token)\r\n    {\r\n      config.headers[\"Authorization\"] = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  });\r\n\r\nmodule.exports =  axiosInstance;\r\n\r\n\r\n\r\n"],"sourceRoot":""}